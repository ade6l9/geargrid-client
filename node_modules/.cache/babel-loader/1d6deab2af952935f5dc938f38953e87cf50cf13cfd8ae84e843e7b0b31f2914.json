{"ast":null,"code":"export const getCroppedImg = (imageSrc, pixelCrop) => {\n  return new Promise((resolve, reject) => {\n    const image = new Image();\n    image.src = imageSrc;\n    image.onload = () => {\n      const canvas = document.createElement('canvas');\n      canvas.width = pixelCrop.width;\n      canvas.height = pixelCrop.height;\n      const ctx = canvas.getContext('2d');\n      ctx.drawImage(image, pixelCrop.x, pixelCrop.y, pixelCrop.width, pixelCrop.height, 0, 0, pixelCrop.width, pixelCrop.height);\n\n      // ✅ Return base64 encoded image for persistent storage\n      const base64Image = canvas.toDataURL('image/jpeg');\n      resolve(base64Image);\n    };\n    image.onerror = err => {\n      reject(new Error(\"Failed to load image\"));\n    };\n  });\n};","map":{"version":3,"names":["getCroppedImg","imageSrc","pixelCrop","Promise","resolve","reject","image","Image","src","onload","canvas","document","createElement","width","height","ctx","getContext","drawImage","x","y","base64Image","toDataURL","onerror","err","Error"],"sources":["/Users/adelinadautovic/geargrid-client/src/components/cropImage.js"],"sourcesContent":["export const getCroppedImg = (imageSrc, pixelCrop) => {\n    return new Promise((resolve, reject) => {\n      const image = new Image();\n      image.src = imageSrc;\n  \n      image.onload = () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = pixelCrop.width;\n        canvas.height = pixelCrop.height;\n        const ctx = canvas.getContext('2d');\n  \n        ctx.drawImage(\n          image,\n          pixelCrop.x,\n          pixelCrop.y,\n          pixelCrop.width,\n          pixelCrop.height,\n          0,\n          0,\n          pixelCrop.width,\n          pixelCrop.height\n        );\n  \n        // ✅ Return base64 encoded image for persistent storage\n        const base64Image = canvas.toDataURL('image/jpeg');\n        resolve(base64Image);\n      };\n  \n      image.onerror = (err) => {\n        reject(new Error(\"Failed to load image\"));\n      };\n    });\n  };\n  "],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAGA,CAACC,QAAQ,EAAEC,SAAS,KAAK;EAClD,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAAC,CAAC;IACzBD,KAAK,CAACE,GAAG,GAAGP,QAAQ;IAEpBK,KAAK,CAACG,MAAM,GAAG,MAAM;MACnB,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/CF,MAAM,CAACG,KAAK,GAAGX,SAAS,CAACW,KAAK;MAC9BH,MAAM,CAACI,MAAM,GAAGZ,SAAS,CAACY,MAAM;MAChC,MAAMC,GAAG,GAAGL,MAAM,CAACM,UAAU,CAAC,IAAI,CAAC;MAEnCD,GAAG,CAACE,SAAS,CACXX,KAAK,EACLJ,SAAS,CAACgB,CAAC,EACXhB,SAAS,CAACiB,CAAC,EACXjB,SAAS,CAACW,KAAK,EACfX,SAAS,CAACY,MAAM,EAChB,CAAC,EACD,CAAC,EACDZ,SAAS,CAACW,KAAK,EACfX,SAAS,CAACY,MACZ,CAAC;;MAED;MACA,MAAMM,WAAW,GAAGV,MAAM,CAACW,SAAS,CAAC,YAAY,CAAC;MAClDjB,OAAO,CAACgB,WAAW,CAAC;IACtB,CAAC;IAEDd,KAAK,CAACgB,OAAO,GAAIC,GAAG,IAAK;MACvBlB,MAAM,CAAC,IAAImB,KAAK,CAAC,sBAAsB,CAAC,CAAC;IAC3C,CAAC;EACH,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}