{"ast":null,"code":"var _jsxFileName = \"/Users/adelinadautovic/geargrid-client/src/components/Addbuild.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { vehicleData } from '../data/vehicleData';\nimport { modCategories } from '../data/modCategories';\nimport '../css/AddBuild.css';\n\n// AddBuild component: lets user create a new car build with details, images, and mods\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddBuild = () => {\n  _s();\n  var _newSubInputs$current;\n  // Set a data attribute on the body for page-specific styling\n  useEffect(() => {\n    document.body.setAttribute('data-page', 'add-build');\n    return () => {\n      document.body.removeAttribute('data-page');\n    };\n  }, []);\n\n  // ====== Form State ======\n  const [ownership, setOwnership] = useState('current'); // current or previous\n  const [vehicleType, setVehicleType] = useState('');\n  const [brand, setBrand] = useState('');\n  const [selectedModel, setSelectedModel] = useState('');\n  const [customModel, setCustomModel] = useState('');\n  const [bodyStyle, setBodyStyle] = useState('');\n  const [description, setDescription] = useState('');\n  const [coverFiles, setCoverFiles] = useState([]); // up to 2 cover images\n  const [galleryFiles, setGalleryFiles] = useState([]); // up to 10 gallery images\n  const [mods, setMods] = useState([]); // selected mods\n  const [customSubs, setCustomSubs] = useState({}); // custom sub-categories by main category\n  const [newSubInputs, setNewSubInputs] = useState({}); // input values for new sub-categories\n  const [customModInput, setCustomModInput] = useState(''); // input for custom mod name\n  const [currentMain, setCurrentMain] = useState(''); // currently selected main category\n  const [currentSub, setCurrentSub] = useState(''); // currently selected sub-category\n\n  // For sidebar navigation between main categories\n  const mainCategories = Object.keys(modCategories);\n  const [stepIndex, setStepIndex] = useState(0);\n  const currentCategory = mainCategories[stepIndex];\n  const navigate = useNavigate();\n\n  // ====== Form Submit Handler ======\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Validate required fields\n    const finalModel = customModel || selectedModel;\n    if (!vehicleType || !brand || !finalModel || !bodyStyle || !coverFiles[0]) {\n      alert(\"Please select vehicle type, brand, model, body style, and upload at least 1 cover image.\");\n      return;\n    }\n\n    // Prepare form data for backend (multipart/form-data)\n    const formData = new FormData();\n    formData.append('ownership', ownership);\n    formData.append('car_name', `${brand} ${finalModel}`.trim());\n    formData.append('model', finalModel);\n    formData.append('bodyStyle', bodyStyle);\n    formData.append('description', description);\n\n    // Serialize mods for backend\n    const modsPayload = mods.map(({\n      main,\n      sub,\n      name,\n      details\n    }) => ({\n      main,\n      sub,\n      name,\n      details\n    }));\n    formData.append('mods', JSON.stringify(modsPayload));\n    mods.forEach(mod => {\n      if (mod.image) formData.append('modImages', mod.image);\n    });\n\n    // Attach cover and gallery images\n    coverFiles.slice(0, 2).forEach(file => file && formData.append('coverImages', file));\n    galleryFiles.forEach(file => file && formData.append('galleryImages', file));\n    try {\n      const res = await fetch('/api/builds', {\n        method: 'POST',\n        credentials: 'include',\n        body: formData\n      });\n      const data = await res.json();\n      if (data.success) navigate('/profile');else console.error('Server error:', data.message);\n    } catch (err) {\n      console.error('Fetch error:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-build-container-with-sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mainCategories.map((cat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: index === stepIndex ? 'active' : '',\n          onClick: () => {\n            setCurrentMain(cat);\n            setCurrentSub('');\n            setStepIndex(index);\n          },\n          children: cat\n        }, cat, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-form-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add a New Build\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-build-form\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => navigate('/profile'),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"add-build-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"Is this car currently owned or a previous car?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"current\",\n              checked: ownership === 'current',\n              onChange: () => setOwnership('current')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), \"Currently owned\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"previous\",\n              checked: ownership === 'previous',\n              onChange: () => setOwnership('previous')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), \"Previously owned\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Vehicle Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: vehicleType,\n          onChange: e => {\n            setVehicleType(e.target.value);\n            setBrand('');\n            setSelectedModel('');\n            setCustomModel('');\n            setBodyStyle('');\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select Type --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), Object.keys(vehicleData).map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: type,\n            children: type\n          }, type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 51\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), vehicleType && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: brand,\n            onChange: e => {\n              setBrand(e.target.value);\n              setSelectedModel('');\n              setCustomModel('');\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Select Brand --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), Object.keys(vehicleData[vehicleType]).map(b => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: b,\n              children: b\n            }, b, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 65\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), brand && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Model\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedModel,\n              onChange: e => setSelectedModel(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select Model --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this), vehicleData[vehicleType][brand].map(m => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: m,\n                children: m\n              }, m, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 61\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"Type manually\",\n              value: customModel,\n              onChange: e => setCustomModel(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), (selectedModel || customModel) && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Body Style\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: bodyStyle,\n            onChange: e => setBodyStyle(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Select Body Style --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), ['Coupe', 'Sedan', 'Hatchback', 'SUV', 'Wagon', 'Convertible', 'Pickup Truck', 'Van', 'Motorcycle', 'Other'].map(style => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: style,\n              children: style\n            }, style, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          rows: \"4\",\n          placeholder: \"Describe your build...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: currentCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), [...Object.keys(modCategories[currentCategory] || []), ...(customSubs[currentCategory] || [])].map(sub => {\n          const isCustom = (customSubs[currentCategory] || []).includes(sub);\n          // Sub-category is open if selected or if any mod is selected in it\n          const isSubOpen = currentSub === sub || mods.some(m => m.main === currentCategory && m.sub === sub);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mod-sub-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: `mod-sub-btn ${currentSub === sub ? 'active' : ''}`,\n              onClick: () => setCurrentSub(s => s === sub ? '' : sub),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"label-text\",\n                children: sub\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this), isCustom && /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"mod-sub-delete\",\n                onClick: () => {\n                  if (!window.confirm(`Delete sub-category “${sub}”?`)) return;\n                  setCustomSubs(cs => {\n                    const filtered = cs[currentCategory].filter(s => s !== sub);\n                    return {\n                      ...cs,\n                      [currentCategory]: filtered\n                    };\n                  });\n                  if (currentSub === sub) setCurrentSub('');\n                },\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), isSubOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mods-items\",\n              children: [[...(modCategories[currentCategory][sub] || []), ...mods.filter(m => m.main === currentCategory && m.sub === sub && !(modCategories[currentCategory][sub] || []).includes(m.name)).map(m => m.name)].map(item => {\n                const isChecked = mods.some(m => m.main === currentCategory && m.sub === sub && m.name === item);\n                const mod = mods.find(m => m.main === currentCategory && m.sub === sub && m.name === item);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      checked: isChecked,\n                      onChange: () => {\n                        if (isChecked) {\n                          setMods(ms => ms.filter(m => !(m.main === currentCategory && m.sub === sub && m.name === item)));\n                        } else {\n                          setMods(ms => [...ms, {\n                            main: currentCategory,\n                            sub,\n                            name: item,\n                            details: '',\n                            image: null\n                          }]);\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 237,\n                      columnNumber: 29\n                    }, this), item]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 27\n                  }, this), isChecked && /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      placeholder: \"Details\",\n                      value: (mod === null || mod === void 0 ? void 0 : mod.details) || '',\n                      onChange: e => {\n                        const val = e.target.value;\n                        setMods(ms => ms.map(m => m.main === currentCategory && m.sub === sub && m.name === item ? {\n                          ...m,\n                          details: val\n                        } : m));\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"file\",\n                      accept: \"image/*\",\n                      onChange: e => {\n                        const file = e.target.files[0];\n                        setMods(ms => ms.map(m => m.main === currentCategory && m.sub === sub && m.name === item ? {\n                          ...m,\n                          image: file\n                        } : m));\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 31\n                    }, this), (mod === null || mod === void 0 ? void 0 : mod.image) && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mod-image-preview\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: URL.createObjectURL(mod.image),\n                        alt: item\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 281,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 280,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 29\n                  }, this)]\n                }, item, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 25\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"custom-mod\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Other mod name\",\n                  value: customModInput,\n                  onChange: e => setCustomModInput(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  disabled: !customModInput.trim(),\n                  onClick: () => {\n                    setMods(ms => [...ms, {\n                      main: currentCategory,\n                      sub,\n                      name: customModInput.trim(),\n                      details: '',\n                      image: null\n                    }]);\n                    setCustomModInput('');\n                  },\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 19\n            }, this)]\n          }, sub, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-sub\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"New sub-category\",\n            value: newSubInputs[currentCategory] || '',\n            onChange: e => setNewSubInputs(i => ({\n              ...i,\n              [currentCategory]: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            disabled: !((_newSubInputs$current = newSubInputs[currentCategory]) !== null && _newSubInputs$current !== void 0 && _newSubInputs$current.trim()),\n            onClick: () => {\n              const subName = newSubInputs[currentCategory].trim();\n              setCustomSubs(cs => ({\n                ...cs,\n                [currentCategory]: [...(cs[currentCategory] || []), subName]\n              }));\n              setNewSubInputs(i => ({\n                ...i,\n                [currentCategory]: ''\n              }));\n            },\n            children: \"Add Sub-category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-nav-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setStepIndex(i => Math.max(0, i - 1)),\n            disabled: stepIndex === 0,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setStepIndex(i => Math.min(mainCategories.length - 1, i + 1)),\n            disabled: stepIndex === mainCategories.length - 1,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Cover Images (up to 2)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: e => {\n              const file = e.target.files[0];\n              if (!file) return;\n              setCoverFiles(prev => {\n                const names = new Set(prev.map(f => f.name));\n                const next = [...prev];\n                if (!names.has(file.name)) {\n                  next.push(file);\n                }\n                return next.slice(0, 2);\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-list\",\n            children: coverFiles.map((file, i) => {\n              const url = URL.createObjectURL(file);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"remove-btn\",\n                  onClick: () => setCoverFiles(prev => prev.filter((_, j) => j !== i)),\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: url,\n                  alt: file.name,\n                  className: \"preview-thumb\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"preview-name\",\n                  children: file.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 21\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Gallery Images (up to 10)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            multiple: true,\n            onChange: e => {\n              const files = Array.from(e.target.files);\n              setGalleryFiles(prev => {\n                const names = new Set(prev.map(f => f.name));\n                const combined = [...prev];\n                for (let f of files) {\n                  if (!names.has(f.name)) combined.push(f);\n                  if (combined.length >= 10) break;\n                }\n                return combined.slice(0, 10);\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-list\",\n            children: galleryFiles.map((file, i) => {\n              const url = URL.createObjectURL(file);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"remove-btn\",\n                  onClick: () => setGalleryFiles(prev => prev.filter((_, j) => j !== i)),\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: url,\n                  alt: file.name,\n                  className: \"preview-thumb\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"preview-name\",\n                  children: file.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 21\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !coverFiles[0],\n          children: \"Submit Build\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(AddBuild, \"9foG7LKbqsrzIak0k563Q3+g660=\", false, function () {\n  return [useNavigate];\n});\n_c = AddBuild;\nexport default AddBuild;\nvar _c;\n$RefreshReg$(_c, \"AddBuild\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","vehicleData","modCategories","jsxDEV","_jsxDEV","Fragment","_Fragment","AddBuild","_s","_newSubInputs$current","document","body","setAttribute","removeAttribute","ownership","setOwnership","vehicleType","setVehicleType","brand","setBrand","selectedModel","setSelectedModel","customModel","setCustomModel","bodyStyle","setBodyStyle","description","setDescription","coverFiles","setCoverFiles","galleryFiles","setGalleryFiles","mods","setMods","customSubs","setCustomSubs","newSubInputs","setNewSubInputs","customModInput","setCustomModInput","currentMain","setCurrentMain","currentSub","setCurrentSub","mainCategories","Object","keys","stepIndex","setStepIndex","currentCategory","navigate","handleSubmit","e","preventDefault","finalModel","alert","formData","FormData","append","trim","modsPayload","map","main","sub","name","details","JSON","stringify","forEach","mod","image","slice","file","res","fetch","method","credentials","data","json","success","console","error","message","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","cat","index","onClick","type","onSubmit","value","checked","onChange","target","b","style","display","gap","m","placeholder","rows","isCustom","includes","isSubOpen","some","s","window","confirm","cs","filtered","filter","item","isChecked","find","ms","val","accept","files","src","URL","createObjectURL","alt","disabled","i","subName","Math","max","min","length","prev","names","Set","f","next","has","push","url","_","j","multiple","Array","from","combined","_c","$RefreshReg$"],"sources":["/Users/adelinadautovic/geargrid-client/src/components/Addbuild.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { vehicleData } from '../data/vehicleData';\nimport { modCategories } from '../data/modCategories';\nimport '../css/AddBuild.css';\n\n// AddBuild component: lets user create a new car build with details, images, and mods\nconst AddBuild = () => {\n\n  // Set a data attribute on the body for page-specific styling\n  useEffect(() => {\n    document.body.setAttribute('data-page', 'add-build');\n    return () => {\n      document.body.removeAttribute('data-page');\n    };\n  }, []);\n\n  // ====== Form State ======\n  const [ownership, setOwnership] = useState('current'); // current or previous\n  const [vehicleType, setVehicleType] = useState('');\n  const [brand, setBrand] = useState('');\n  const [selectedModel, setSelectedModel] = useState('');\n  const [customModel, setCustomModel] = useState('');\n  const [bodyStyle, setBodyStyle] = useState('');\n  const [description, setDescription] = useState('');\n  const [coverFiles, setCoverFiles] = useState([]); // up to 2 cover images\n  const [galleryFiles, setGalleryFiles] = useState([]); // up to 10 gallery images\n  const [mods, setMods] = useState([]); // selected mods\n  const [customSubs, setCustomSubs] = useState({}); // custom sub-categories by main category\n  const [newSubInputs, setNewSubInputs] = useState({}); // input values for new sub-categories\n  const [customModInput, setCustomModInput] = useState(''); // input for custom mod name\n  const [currentMain, setCurrentMain] = useState(''); // currently selected main category\n  const [currentSub, setCurrentSub] = useState(''); // currently selected sub-category\n\n  // For sidebar navigation between main categories\n  const mainCategories = Object.keys(modCategories);\n  const [stepIndex, setStepIndex] = useState(0);\n  const currentCategory = mainCategories[stepIndex];\n\n  const navigate = useNavigate();\n\n  // ====== Form Submit Handler ======\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // Validate required fields\n    const finalModel = customModel || selectedModel;\n    if (!vehicleType || !brand || !finalModel || !bodyStyle || !coverFiles[0]) {\n      alert(\"Please select vehicle type, brand, model, body style, and upload at least 1 cover image.\");\n      return;\n    }\n\n    // Prepare form data for backend (multipart/form-data)\n    const formData = new FormData();\n    formData.append('ownership', ownership);\n    formData.append('car_name', `${brand} ${finalModel}`.trim());\n    formData.append('model', finalModel);\n    formData.append('bodyStyle', bodyStyle);\n    formData.append('description', description);\n\n    // Serialize mods for backend\n    const modsPayload = mods.map(({ main, sub, name, details }) => ({ main, sub, name, details }));\n    formData.append('mods', JSON.stringify(modsPayload));\n    mods.forEach(mod => {\n      if (mod.image) formData.append('modImages', mod.image);\n    });\n\n    // Attach cover and gallery images\n    coverFiles.slice(0, 2).forEach(file => file && formData.append('coverImages', file));\n    galleryFiles.forEach(file => file && formData.append('galleryImages', file));\n\n    try {\n      const res = await fetch('/api/builds', {\n        method: 'POST',\n        credentials: 'include',\n        body: formData\n      });\n      const data = await res.json();\n      if (data.success) navigate('/profile');\n      else console.error('Server error:', data.message);\n    } catch (err) {\n      console.error('Fetch error:', err);\n    }\n  };\n\n  return (\n    <div className=\"add-build-container-with-sidebar\">\n      {/* ====== Sidebar Navigation for Main Categories ====== */}\n      <div className=\"sidebar-nav\">\n        <h3>Categories</h3>\n        <ul>\n          {mainCategories.map((cat, index) => (\n            <li\n              key={cat}\n              className={index === stepIndex ? 'active' : ''}\n              onClick={() => {\n                setCurrentMain(cat);\n                setCurrentSub('');\n                setStepIndex(index);\n              }}\n            >\n              {cat}\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      {/* ====== Main Form Area ====== */}\n      <div className=\"main-form-area\">\n        <h2>Add a New Build</h2>\n        <div className=\"add-build-form\">\n          {/* Cancel button returns to profile */}\n          <button type=\"button\" onClick={() => navigate('/profile')}>Cancel</button>\n        </div>\n        <br/>\n        <form onSubmit={handleSubmit} className=\"add-build-form\">\n\n          {/* ====== Vehicle Info Section ====== */}\n          <fieldset>\n            <legend>Is this car currently owned or a previous car?</legend>\n            <label>\n              <input type=\"radio\" value=\"current\" checked={ownership === 'current'} onChange={() => setOwnership('current')} />\n              Currently owned\n            </label>\n            <label>\n              <input type=\"radio\" value=\"previous\" checked={ownership === 'previous'} onChange={() => setOwnership('previous')} />\n              Previously owned\n            </label>\n          </fieldset>\n\n          {/* Vehicle type selection */}\n          <label>Vehicle Type</label>\n          <select value={vehicleType} onChange={e => {\n            setVehicleType(e.target.value);\n            setBrand(''); setSelectedModel(''); setCustomModel(''); setBodyStyle('');\n          }}>\n            <option value=\"\">-- Select Type --</option>\n            {Object.keys(vehicleData).map(type => <option key={type} value={type}>{type}</option>)}\n          </select>\n\n          {/* Brand selection, shown after vehicle type is picked */}\n          {vehicleType && (\n            <>\n              <label>Brand</label>\n              <select value={brand} onChange={e => {\n                setBrand(e.target.value);\n                setSelectedModel(''); setCustomModel('');\n              }}>\n                <option value=\"\">-- Select Brand --</option>\n                {Object.keys(vehicleData[vehicleType]).map(b => <option key={b} value={b}>{b}</option>)}\n              </select>\n            </>\n          )}\n\n          {/* Model selection and manual input, shown after brand is picked */}\n          {brand && (\n            <>\n              <label>Model</label>\n              <div style={{ display: 'flex', gap: '10px' }}>\n                <select value={selectedModel} onChange={e => setSelectedModel(e.target.value)}>\n                  <option value=\"\">-- Select Model --</option>\n                  {vehicleData[vehicleType][brand].map(m => <option key={m} value={m}>{m}</option>)}\n                </select>\n                {/* Manual model input */}\n                <input placeholder=\"Type manually\" value={customModel} onChange={e => setCustomModel(e.target.value)} />\n              </div>\n            </>\n          )}\n\n          {/* Body style selection, shown after model is picked or typed */}\n          {(selectedModel || customModel) && (\n            <>\n              <label>Body Style</label>\n              <select value={bodyStyle} onChange={e => setBodyStyle(e.target.value)}>\n                <option value=\"\">-- Select Body Style --</option>\n                {/* Common body styles */}\n                {['Coupe', 'Sedan', 'Hatchback', 'SUV', 'Wagon', 'Convertible', 'Pickup Truck', 'Van', 'Motorcycle', 'Other'].map(style => (\n                  <option key={style} value={style}>{style}</option>\n                ))}\n              </select>\n            </>\n          )}\n\n          {/* Build description */}\n          <label>Description</label>\n          <textarea value={description} onChange={e => setDescription(e.target.value)} rows=\"4\" placeholder=\"Describe your build...\" />\n\n          {/* ====== Mod Selection Section ====== */}\n          <h3>{currentCategory}</h3>\n\n          {/* List all sub-categories (built-in and custom) for the current main category */}\n          {[...(Object.keys(modCategories[currentCategory] || [])), ...(customSubs[currentCategory] || [])].map(sub => {\n            const isCustom = (customSubs[currentCategory] || []).includes(sub);\n            // Sub-category is open if selected or if any mod is selected in it\n            const isSubOpen = currentSub === sub || mods.some(m => m.main === currentCategory && m.sub === sub);\n            return (\n              <div key={sub} className=\"mod-sub-block\">\n                {/* Sub-category button (toggles open/close) */}\n                <button\n                  type=\"button\"\n                  className={`mod-sub-btn ${currentSub === sub ? 'active' : ''}`}\n                  onClick={() => setCurrentSub(s => s === sub ? '' : sub)}\n                >\n                  <span className=\"label-text\">{sub}</span>\n\n                  {/* ====== Delete Custom Sub-Category Button ====== */}\n                  {isCustom && (\n                    <button\n                      type=\"button\"\n                      className=\"mod-sub-delete\"\n                      onClick={() => {\n                        if (!window.confirm(`Delete sub-category “${sub}”?`)) return;\n                        setCustomSubs(cs => {\n                          const filtered = cs[currentCategory].filter(s => s !== sub);\n                          return { ...cs, [currentCategory]: filtered };\n                        });\n                        if (currentSub === sub) setCurrentSub('');\n                      }}\n                    >\n                      ×\n                    </button>\n                  )}\n                </button>\n\n                {/* ====== Mods in This Sub-Category ====== */}\n                {isSubOpen && (\n                  <div className=\"mods-items\">\n                    {/* List built-in and custom mods for this sub-category */}\n                    {[...(modCategories[currentCategory][sub] || []),\n                      ...mods.filter(m => m.main === currentCategory && m.sub === sub && !(modCategories[currentCategory][sub] || []).includes(m.name)).map(m => m.name)\n                    ].map(item => {\n                      const isChecked = mods.some(m => m.main === currentCategory && m.sub === sub && m.name === item);\n                      const mod = mods.find(m => m.main === currentCategory && m.sub === sub && m.name === item);\n                      return (\n                        <div key={item}>\n                          {/* Checkbox for mod selection */}\n                          <label>\n                            <input\n                              type=\"checkbox\"\n                              checked={isChecked}\n                              onChange={() => {\n                                if (isChecked) {\n                                  setMods(ms => ms.filter(m => !(m.main === currentCategory && m.sub === sub && m.name === item)));\n                                } else {\n                                  setMods(ms => [...ms, { main: currentCategory, sub, name: item, details: '', image: null }]);\n                                }\n                              }}\n                            />\n                            {item}\n                          </label>\n                          {/* If checked, show details and image upload */}\n                          {isChecked && (\n                            <div>\n                              <input\n                                type=\"text\"\n                                placeholder=\"Details\"\n                                value={mod?.details || ''}\n                                onChange={e => {\n                                  const val = e.target.value;\n                                  setMods(ms => ms.map(m =>\n                                    m.main === currentCategory && m.sub === sub && m.name === item\n                                      ? { ...m, details: val }\n                                      : m\n                                  ));\n                                }}\n                              />\n                              <input\n                                type=\"file\"\n                                accept=\"image/*\"\n                                onChange={e => {\n                                  const file = e.target.files[0];\n                                  setMods(ms => ms.map(m =>\n                                    m.main === currentCategory && m.sub === sub && m.name === item\n                                      ? { ...m, image: file }\n                                      : m\n                                  ));\n                                }}\n                              />\n                              {/* Show preview if image is selected */}\n                              {mod?.image && (\n                                <div className=\"mod-image-preview\">\n                                  <img src={URL.createObjectURL(mod.image)} alt={item} />\n                                </div>\n                              )}\n                            </div>\n                          )}\n                        </div>\n                      );\n                    })}\n\n                    {/* ====== Add Custom Mod Input ====== */}\n                    <div className=\"custom-mod\">\n                      <input\n                        type=\"text\"\n                        placeholder=\"Other mod name\"\n                        value={customModInput}\n                        onChange={e => setCustomModInput(e.target.value)}\n                      />\n                      <button\n                        type=\"button\"\n                        disabled={!customModInput.trim()}\n                        onClick={() => {\n                          setMods(ms => [...ms, {\n                            main: currentCategory,\n                            sub,\n                            name: customModInput.trim(),\n                            details: '',\n                            image: null\n                          }]);\n                          setCustomModInput('');\n                        }}\n                      >\n                        Add\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </div>\n            );\n          })}\n\n          {/* ====== Add New Sub-Category Input ====== */}\n          <div className=\"custom-sub\">\n            <input\n              type=\"text\"\n              placeholder=\"New sub-category\"\n              value={newSubInputs[currentCategory] || ''}\n              onChange={e => setNewSubInputs(i => ({ ...i, [currentCategory]: e.target.value }))}\n            />\n            <button\n              type=\"button\"\n              disabled={!newSubInputs[currentCategory]?.trim()}\n              onClick={() => {\n                const subName = newSubInputs[currentCategory].trim();\n                setCustomSubs(cs => ({\n                  ...cs,\n                  [currentCategory]: [...(cs[currentCategory] || []), subName]\n                }));\n                setNewSubInputs(i => ({ ...i, [currentCategory]: '' }));\n              }}\n            >\n              Add Sub-category\n            </button>\n          </div>\n\n          {/* ====== Step Navigation Buttons ====== */}\n          <div className=\"step-nav-buttons\">\n            <button type=\"button\" onClick={() => setStepIndex(i => Math.max(0, i - 1))} disabled={stepIndex === 0}>Back</button>\n            <button type=\"button\" onClick={() => setStepIndex(i => Math.min(mainCategories.length - 1, i + 1))} disabled={stepIndex === mainCategories.length - 1}>Next</button>\n          </div>\n\n          {/* ====== Upload Section ====== */}\n          <div className=\"upload-box\">\n            <label>Cover Images (up to 2)</label>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={e => {\n                const file = e.target.files[0];\n                if (!file) return;\n                setCoverFiles(prev => {\n                  const names = new Set(prev.map(f => f.name));\n                  const next = [...prev];\n                  if (!names.has(file.name)) {\n                    next.push(file);\n                  }\n                  return next.slice(0, 2);\n                });\n              }}\n            />\n            {/* Preview selected cover images */}\n            <div className=\"preview-list\">\n              {coverFiles.map((file, i) => {\n                const url = URL.createObjectURL(file);\n                return (\n                  <div key={i} className=\"preview-item\">\n                    <button type=\"button\" className=\"remove-btn\" onClick={() => setCoverFiles(prev => prev.filter((_, j) => j !== i))}>×</button>\n                    <img src={url} alt={file.name} className=\"preview-thumb\" />\n                    <span className=\"preview-name\">{file.name}</span>\n                  </div>\n                );\n              })}\n            </div>\n\n            <label>Gallery Images (up to 10)</label>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              multiple\n              onChange={e => {\n                const files = Array.from(e.target.files);\n                setGalleryFiles(prev => {\n                  const names = new Set(prev.map(f => f.name));\n                  const combined = [...prev];\n                  for (let f of files) {\n                    if (!names.has(f.name)) combined.push(f);\n                    if (combined.length >= 10) break;\n                  }\n                  return combined.slice(0, 10);\n                });\n              }}\n            />\n            {/* Preview selected gallery images */}\n            <div className=\"preview-list\">\n              {galleryFiles.map((file, i) => {\n                const url = URL.createObjectURL(file);\n                return (\n                  <div key={i} className=\"preview-item\">\n                    <button type=\"button\" className=\"remove-btn\" onClick={() => setGalleryFiles(prev => prev.filter((_, j) => j !== i))}>×</button>\n                    <img src={url} alt={file.name} className=\"preview-thumb\" />\n                    <span className=\"preview-name\">{file.name}</span>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* ====== Submit Button ====== */}\n          <button type=\"submit\" disabled={!coverFiles[0]}>Submit Build</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AddBuild;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}