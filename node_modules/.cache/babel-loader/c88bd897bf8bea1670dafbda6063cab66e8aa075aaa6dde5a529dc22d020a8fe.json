{"ast":null,"code":"var _jsxFileName = \"/Users/adelinadautovic/geargrid-client/src/components/CarBuild.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport Slider from 'react-slick';\nimport '../css/CarBuild.css';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { API_BASE, resolveImageUrl } from '../utils/imageUrl';\nimport { modCategories } from '../data/modCategories';\n\n// CarBuild component displays a single car build, including covers, description, mods, and gallery\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CarBuild = () => {\n  _s();\n  var _build$cover_image;\n  const {\n    id\n  } = useParams(); // Get build ID from URL\n  const navigate = useNavigate();\n\n  // State for build details, mods, gallery images, and ownership\n  const [build, setBuild] = useState(null);\n  const [mods, setMods] = useState([]); // flat array of mods\n  const [gallery, setGallery] = useState([]);\n  const [isOwner, setIsOwner] = useState(false);\n\n  // Helper to ensure mods is always an array (handles both array and object input)\n  const normalizeMods = m => {\n    // For debugging: log groupedMods (may be undefined on first render)\n    console.log('groupedMods:', groupedMods);\n    if (Array.isArray(m)) return m;\n    return Object.values(m).flat();\n  };\n\n  // Fetch build data from backend on mount or when id changes\n  useEffect(() => {\n    const fetchBuild = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(`http://localhost:3001/api/builds/${id}`, {\n          withCredentials: true\n        });\n        if (!data.success) throw new Error(data.message);\n        setBuild(data.build);\n        setMods(normalizeMods(data.mods || []));\n        setGallery(data.build.galleryImages || []);\n        setIsOwner(data.isOwner);\n      } catch (err) {\n        console.error('Failed to load build:', err);\n      }\n    };\n    fetchBuild();\n  }, [id]);\n\n  // Group mods by category and subcategory, preserving the order from modCategories\n  const groupedMods = useMemo(() => {\n    const orderedCategories = Object.keys(modCategories); // Original order\n    // Group mods into { [category]: { [sub]: [mods] } }\n    const modsByCategory = mods.reduce((cats, mod) => {\n      const cat = mod.category || 'Uncategorized';\n      const sub = mod.sub_category || 'Other';\n      if (!cats[cat]) cats[cat] = {};\n      if (!cats[cat][sub]) cats[cat][sub] = [];\n      cats[cat][sub].push(mod);\n      return cats;\n    }, {});\n\n    // Only include categories with mods, in the original order\n    const sortedCategories = orderedCategories.reduce((sorted, category) => {\n      if (modsByCategory[category]) {\n        sorted[category] = modsByCategory[category];\n      }\n      return sorted;\n    }, {});\n    return sortedCategories;\n  }, [mods]);\n\n  // Settings for the cover image slider\n  const sliderSettings = {\n    dots: true,\n    infinite: true,\n    speed: 400,\n    slidesToShow: 1,\n    adaptiveHeight: true\n  };\n\n  // Show loading state if build data hasn't loaded yet\n  if (!build) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading build\\u2026\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"car-build-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"car-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"car-title\",\n        children: build.car_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), build.body_style && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"body-style\",\n        children: build.body_style\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 30\n      }, this), isOwner && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"edit-button\",\n        onClick: () => navigate(`/edit-build/${build.id}`),\n        children: \"Edit Build\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      ...sliderSettings,\n      className: \"car-image-slider\",\n      children: [build.cover_image, (_build$cover_image = build.cover_image2) !== null && _build$cover_image !== void 0 ? _build$cover_image : build.cover_image // fallback to first if second missing\n      ].map((rawSrc, idx) => {\n        // rawSrc may be null or a string; resolveImageUrl will give default if null\n        const src = resolveImageUrl(rawSrc);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slider-item\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: src,\n            alt: `Cover ${idx + 1}`,\n            className: \"car-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"description-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"car-description\",\n        children: build.description || 'No description provided.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"modifications\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"Modifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), mods.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No modifications added.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 31\n      }, this), Object.entries(groupedMods).map(([category, subs]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"category-title\",\n          children: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), Object.entries(subs).map(([sub, items]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sub-category-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"sub-title\",\n            children: sub\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mods-container\",\n            children: items.map(mod => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mod-item\",\n              children: [mod.image_url && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: resolveImageUrl(mod.image_url, 'build'),\n                alt: mod.mod_name,\n                className: \"mod-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mod-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  className: \"mod-name\",\n                  children: mod.mod_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 25\n                }, this), mod.mod_note && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mod-note\",\n                  children: mod.mod_note\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 42\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 23\n              }, this)]\n            }, mod.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this)]\n        }, sub, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this))]\n      }, category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"gallery-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"Gallery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), gallery.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No gallery images uploaded.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery-grid\",\n        children: gallery.slice(0, 10).map((rawUrl, idx) => {\n          const src = resolveImageUrl(rawUrl);\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: src,\n            alt: `Gallery ${idx + 1}`,\n            className: \"gallery-image\"\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"username-button\",\n      onClick: () => navigate(-1),\n      children: \"Back to Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(CarBuild, \"Qoih0QVovSKbNDlqbjFMmhRTZJ4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CarBuild;\nexport default CarBuild;\nvar _c;\n$RefreshReg$(_c, \"CarBuild\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","useNavigate","useParams","axios","Slider","API_BASE","resolveImageUrl","modCategories","jsxDEV","_jsxDEV","CarBuild","_s","_build$cover_image","id","navigate","build","setBuild","mods","setMods","gallery","setGallery","isOwner","setIsOwner","normalizeMods","m","console","log","groupedMods","Array","isArray","Object","values","flat","fetchBuild","data","get","withCredentials","success","Error","message","galleryImages","err","error","orderedCategories","keys","modsByCategory","reduce","cats","mod","cat","category","sub","sub_category","push","sortedCategories","sorted","sliderSettings","dots","infinite","speed","slidesToShow","adaptiveHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","className","car_name","body_style","onClick","cover_image","cover_image2","map","rawSrc","idx","src","alt","description","length","entries","subs","items","image_url","mod_name","mod_note","slice","rawUrl","_c","$RefreshReg$"],"sources":["/Users/adelinadautovic/geargrid-client/src/components/CarBuild.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport Slider from 'react-slick';\nimport '../css/CarBuild.css';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { API_BASE, resolveImageUrl } from '../utils/imageUrl';\nimport { modCategories } from '../data/modCategories';\n\n// CarBuild component displays a single car build, including covers, description, mods, and gallery\nconst CarBuild = () => {\n  const { id } = useParams(); // Get build ID from URL\n  const navigate = useNavigate();\n\n  // State for build details, mods, gallery images, and ownership\n  const [build, setBuild]   = useState(null);\n  const [mods, setMods]     = useState([]);    // flat array of mods\n  const [gallery, setGallery] = useState([]);\n  const [isOwner, setIsOwner] = useState(false);\n  \n  // Helper to ensure mods is always an array (handles both array and object input)\n  const normalizeMods = (m) => {\n    // For debugging: log groupedMods (may be undefined on first render)\n    console.log('groupedMods:', groupedMods);\n\n    if (Array.isArray(m)) return m;\n    return Object.values(m).flat();\n  };\n\n  // Fetch build data from backend on mount or when id changes\n  useEffect(() => {\n    const fetchBuild = async () => {\n      try {\n        const { data } = await axios.get(\n          `http://localhost:3001/api/builds/${id}`,\n          { withCredentials: true }\n        );\n        if (!data.success) throw new Error(data.message);\n        setBuild(data.build);\n        setMods(normalizeMods(data.mods || []));\n        setGallery(data.build.galleryImages || []);\n        setIsOwner(data.isOwner);\n      } catch (err) {\n        console.error('Failed to load build:', err);\n      }\n    };\n    fetchBuild();\n  }, [id]);\n\n  // Group mods by category and subcategory, preserving the order from modCategories\n  const groupedMods = useMemo(() => {\n    const orderedCategories = Object.keys(modCategories); // Original order\n    // Group mods into { [category]: { [sub]: [mods] } }\n    const modsByCategory = mods.reduce((cats, mod) => {\n      const cat = mod.category || 'Uncategorized';\n      const sub = mod.sub_category || 'Other';\n      if (!cats[cat]) cats[cat] = {};\n      if (!cats[cat][sub]) cats[cat][sub] = [];\n      cats[cat][sub].push(mod);\n      return cats;\n    }, {});\n\n    // Only include categories with mods, in the original order\n    const sortedCategories = orderedCategories.reduce((sorted, category) => {\n      if (modsByCategory[category]) {\n        sorted[category] = modsByCategory[category];\n      }\n      return sorted;\n    }, {});\n\n    return sortedCategories;\n  }, [mods]);\n\n  // Settings for the cover image slider\n  const sliderSettings = { dots:true, infinite:true, speed:400, slidesToShow:1, adaptiveHeight:true };\n\n  // Show loading state if build data hasn't loaded yet\n  if (!build) return <div>Loading build…</div>;\n\n  return (\n    <div className=\"car-build-page\">\n      <header className=\"car-header\">\n        <h1 className=\"car-title\">{build.car_name}</h1>\n        {/* Show body style if available */}\n        {build.body_style && <p className=\"body-style\">{build.body_style}</p>}\n        {/* Show edit button if user is the owner */}\n        {isOwner && (\n          <button className=\"edit-button\" onClick={() => navigate(`/edit-build/${build.id}`)}>\n            Edit Build\n          </button>\n        )}\n      </header>\n\n      {/* Cover images slider (always shows two images if available) */}\n      <Slider {...sliderSettings} className=\"car-image-slider\">\n        {[\n          build.cover_image,\n          build.cover_image2 ?? build.cover_image // fallback to first if second missing\n        ].map((rawSrc, idx) => {\n          // rawSrc may be null or a string; resolveImageUrl will give default if null\n          const src = resolveImageUrl(rawSrc);\n          return (\n            <div key={idx} className=\"slider-item\">\n              <img\n                src={src}\n                alt={`Cover ${idx + 1}`}\n                className=\"car-image\"\n              />\n            </div>\n          );\n        })}\n      </Slider>\n\n      {/* Description section */}\n      <section className=\"description-section\">\n        <h2 className=\"section-title\">Description</h2>\n        <p className=\"car-description\">\n          {build.description || 'No description provided.'}\n        </p>\n      </section>\n\n      {/* Modifications section: only shows categories with mods, in correct order */}\n      <section className=\"modifications\">\n        <h2 className=\"section-title\">Modifications</h2>\n        {mods.length === 0 && <p>No modifications added.</p>}\n        {Object.entries(groupedMods).map(([category, subs]) => (\n          <div key={category} className=\"category-block\">\n            <h3 className=\"category-title\">{category}</h3>\n            {Object.entries(subs).map(([sub, items]) => (\n              <div key={sub} className=\"sub-category-block\">\n                <h4 className=\"sub-title\">{sub}</h4>\n                <div className=\"mods-container\">\n                  {items.map(mod => (\n                    <div key={mod.id} className=\"mod-item\">\n                      {/* Show mod image if available */}\n                      {mod.image_url && (\n                        <img\n                          src={resolveImageUrl(mod.image_url, 'build')}\n                          alt={mod.mod_name}\n                          className=\"mod-image\"\n                        />\n                      )}\n                      <div className=\"mod-info\">\n                        <strong className=\"mod-name\">{mod.mod_name}</strong>\n                        {mod.mod_note && <p className=\"mod-note\">{mod.mod_note}</p>}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        ))}\n      </section>\n\n      {/* Gallery section: shows up to 10 gallery images */}\n      <section className=\"gallery-section\">\n        <h2 className=\"section-title\">Gallery</h2>\n        {gallery.length === 0 ? (\n          <p>No gallery images uploaded.</p>\n        ) : (\n          <div className=\"gallery-grid\">\n            {gallery.slice(0, 10).map((rawUrl, idx) => {\n              const src = resolveImageUrl(rawUrl);\n              return (\n                <img\n                  key={idx}\n                  src={src}\n                  alt={`Gallery ${idx + 1}`}\n                  className=\"gallery-image\"\n                />\n              );\n            })}\n          </div>\n        )}\n      </section>\n\n      {/* Back button to return to profile */}\n      <button className=\"username-button\" onClick={() => navigate(-1)}>\n        Back to Profile\n      </button>\n    </div>\n  );\n};\n\nexport default CarBuild;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}