{"ast":null,"code":"var _jsxFileName = \"/Users/adelinadautovic/geargrid-client/src/components/Editbuild.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { vehicleData } from '../data/vehicleData';\nimport { modCategories } from '../data/modCategories';\nimport { resolveImageUrl, API_BASE } from '../utils/imageUrl';\nimport '../css/EditBuild.css';\n\n// === EditBuild Component ===\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditBuild() {\n  _s();\n  // === Router & Navigation ===\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n\n  // === Loading State ===\n  const [loading, setLoading] = useState(true);\n\n  // === Core Fields ===\n  const [ownership, setOwnership] = useState('current');\n  const [vehicleType, setVehicleType] = useState('');\n  const [brand, setBrand] = useState('');\n  const [selectedModel, setSelectedModel] = useState('');\n  const [customModel, setCustomModel] = useState('');\n  const [bodyStyle, setBodyStyle] = useState('');\n  const [description, setDescription] = useState('');\n\n  // === Image State ===\n  const [existingCovers, setExistingCovers] = useState([]); // URLs of already uploaded cover images\n  const [coverFiles, setCoverFiles] = useState([]); // New cover files to upload\n  const [existingGallery, setExistingGallery] = useState([]); // URLs of already uploaded gallery images\n  const [galleryFiles, setGalleryFiles] = useState([]); // New gallery files to upload\n\n  // === Mod State ===\n  const [mods, setMods] = useState([]); // All mods for this build\n  const [newModInputs, setNewModInputs] = useState({}); // For custom mod input fields\n\n  // === Fetch build data on mount ===\n  useEffect(() => {\n    axios.get(`${API_BASE}/api/builds/${id}`, {\n      withCredentials: true\n    }).then(({\n      data\n    }) => {\n      // Populate form fields with existing build data\n      const b = data.build;\n      setOwnership(b.ownership);\n      const [br, ...rest] = b.car_name.split(' ');\n      setBrand(br);\n      setSelectedModel(b.model);\n      setCustomModel(rest.join(' ') === b.model ? '' : rest.join(' '));\n      const vt = Object.keys(vehicleData).find(t => vehicleData[t][br]);\n      setVehicleType(vt || '');\n      setBodyStyle(b.bodyStyle || '');\n      setDescription(b.description || '');\n      setExistingCovers([b.cover_image, b.cover_image2].filter(Boolean));\n      setExistingGallery(b.galleryImages || []);\n      // Map backend mods to local mod structure\n      setMods((data.mods || []).map(m => ({\n        main: m.category,\n        sub: m.sub_category,\n        name: m.mod_name,\n        details: m.mod_note || '',\n        image: null,\n        // No new image file yet\n        image_url: m.image_url || null\n      })));\n    }).catch(err => console.error('Failed to load build:', err)).finally(() => setLoading(false));\n  }, [id]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading\\u2026\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 23\n  }, this);\n\n  // === Submit Handler ===\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const form = new FormData();\n    // Append all form fields and files to FormData for backend\n    form.append('ownership', ownership);\n    form.append('car_name', `${brand} ${customModel || selectedModel}`.trim());\n    form.append('model', customModel || selectedModel);\n    form.append('bodyStyle', bodyStyle);\n    form.append('description', description);\n    // Serialize mods for backend\n    form.append('mods', JSON.stringify(mods.map(m => ({\n      main: m.main,\n      sub: m.sub,\n      name: m.name,\n      details: m.details,\n      image_url: m.image ? null : m.image_url,\n      hasImage: !!m.image,\n      deleteImage: !m.image && !m.image_url\n    }))));\n    // Keep track of which covers/gallery images to keep\n    form.append('keepCovers', JSON.stringify(existingCovers));\n    coverFiles.forEach(f => form.append('coverImages', f));\n    form.append('keepGallery', JSON.stringify(existingGallery));\n    galleryFiles.forEach(f => form.append('galleryImages', f));\n    // Attach new mod images\n    mods.forEach(m => m.image && form.append('modImages', m.image));\n    try {\n      const res = await axios.put(`${API_BASE}/api/builds/${id}`, form, {\n        withCredentials: true\n      });\n      if (res.data.success) return navigate(-1); // Go back on success\n      alert(res.data.message || 'Save failed');\n    } catch (err) {\n      console.error('Save error:', err);\n      if (err.response) {\n        alert(`Save failed: ${err.response.status} â€“ ${err.response.data.message || err.response.statusText}`);\n      } else {\n        alert(`Save failed: ${err.message}`);\n      }\n    }\n  };\n\n  // === Helpers for Mod UI ===\n  // Returns true if any mod is selected in this main category\n  const mainHasSelection = main => mods.some(m => m.main === main);\n  // Returns true if any mod is selected in this subcategory\n  const subHasSelection = (main, sub) => mods.some(m => m.main === main && m.sub === sub);\n\n  // === Render ===\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-build-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Build\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cancel-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"top-cancel\",\n        onClick: () => navigate(-1),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"delete-btn\",\n        onClick: async () => {\n          if (!window.confirm('Are you sure you want to delete this build? This cannot be undone.')) return;\n          try {\n            const res = await axios.delete(`${API_BASE}/api/builds/${id}`, {\n              withCredentials: true\n            });\n            if (res.data.success) navigate('/profile');else alert(`Delete failed: ${res.data.message}`);\n          } catch (err) {\n            var _err$response, _err$response2, _err$response2$data;\n            console.error('Delete error:', err);\n            const status = (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status;\n            const msg = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message;\n            alert(`Delete failed: [${status}] ${msg}`);\n          }\n        },\n        children: \"Delete Build\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: \"ownership\",\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Ownership\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"current\",\n            checked: ownership === 'current',\n            onChange: () => setOwnership('current')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), \" Currently Owned\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"previous\",\n            checked: ownership === 'previous',\n            onChange: () => setOwnership('previous')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), \" Previously Owned\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"vehicleType\",\n          children: \"Vehicle Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"vehicleType\",\n          value: vehicleType,\n          onChange: e => {\n            setVehicleType(e.target.value);\n            setBrand('');\n            setSelectedModel('');\n            setCustomModel('');\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Car\",\n            children: \"Car\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Truck\",\n            children: \"Truck\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Motorcycle\",\n            children: \"Motorcycle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), vehicleType && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"brand\",\n            children: \"Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"brand\",\n            value: brand,\n            onChange: e => {\n              setBrand(e.target.value);\n              setSelectedModel('');\n              setCustomModel('');\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"\\u2014 select \\u2014\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), Object.keys(vehicleData[vehicleType]).map(b => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: b,\n              children: b\n            }, b, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"model-row form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"model\",\n              children: \"Model\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"model\",\n              value: selectedModel,\n              onChange: e => {\n                setSelectedModel(e.target.value);\n                setCustomModel('');\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"\\u2014 select \\u2014\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this), (vehicleData[vehicleType][brand] || []).map(m => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: m,\n                children: m\n              }, m, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"customModel\",\n              children: \"Type manually (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"customModel\",\n              type: \"text\",\n              placeholder: \"Type manually (optional)\",\n              value: customModel,\n              onChange: e => setCustomModel(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"bodyStyle\",\n            children: \"Body Style\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"bodyStyle\",\n            value: bodyStyle,\n            onChange: e => setBodyStyle(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"\\u2014 select \\u2014\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Coupe\",\n              children: \"Coupe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Sedan\",\n              children: \"Sedan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Hatchback\",\n              children: \"Hatchback\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Wagon\",\n              children: \"Wagon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Convertible\",\n              children: \"Convertible\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Pickup\",\n              children: \"Pickup\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Truck\",\n              children: \"Truck\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Van\",\n              children: \"Van\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Motorcycle\",\n              children: \"Motorcycle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Other\",\n              children: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Current Covers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-list\",\n        children: existingCovers.map((url, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preview-item small\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: resolveImageUrl(url),\n            alt: `Cover ${i + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setExistingCovers(ec => ec.filter((_, j) => j !== i)),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Upload New Covers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        accept: \"image/*\",\n        disabled: existingCovers.length + coverFiles.length >= 2,\n        onChange: e => {\n          // Only allow up to 2 cover images total\n          const picked = Array.from(e.target.files);\n          const remaining = 2 - existingCovers.length - coverFiles.length;\n          if (picked.length > remaining) {\n            alert(`You can only add ${remaining} more cover ${remaining === 1 ? 'image' : 'images'}.`);\n          }\n          setCoverFiles(cf => [...cf, ...picked.slice(0, remaining)]);\n          e.target.value = null;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-list\",\n        children: coverFiles.map((file, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preview-item small\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: URL.createObjectURL(file),\n            alt: file.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setCoverFiles(cf => cf.filter((_, j) => j !== i)),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Current Gallery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-list\",\n        children: existingGallery.map((url, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preview-item small\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: resolveImageUrl(url),\n            alt: `Gallery ${i + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setExistingGallery(g => g.filter((_, j) => j !== i)),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Upload New Gallery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        accept: \"image/*\",\n        disabled: existingGallery.length + galleryFiles.length >= 10,\n        onChange: e => {\n          // Only allow up to 10 gallery images total\n          const picked = Array.from(e.target.files);\n          const remaining = 10 - existingGallery.length - galleryFiles.length;\n          if (picked.length > remaining) {\n            alert(`You can only add ${remaining} more gallery ${remaining === 1 ? 'image' : 'images'}.`);\n          }\n          setGalleryFiles(gf => [...gf, ...picked.slice(0, remaining)]);\n          e.target.value = null;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-list\",\n        children: galleryFiles.map((file, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preview-item small\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: URL.createObjectURL(file),\n            alt: file.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setGalleryFiles(gf => gf.filter((_, j) => j !== i)),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"modifications\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Modifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), Object.entries(modCategories).map(([main, subsObj]) => /*#__PURE__*/_jsxDEV(\"details\", {\n          open: mainHasSelection(main),\n          children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n            children: main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this), Object.keys(subsObj).map(sub => {\n            var _newModInputs;\n            return /*#__PURE__*/_jsxDEV(\"details\", {\n              open: subHasSelection(main, sub),\n              children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n                children: sub\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 19\n              }, this), subsObj[sub].map(name => {\n                const sel = mods.find(m => m.main === main && m.sub === sub && m.name === name);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mod-card-vertical\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      checked: !!sel,\n                      onChange: () => {\n                        sel ? setMods(ms => ms.filter(x => x !== sel)) : setMods(ms => [...ms, {\n                          main,\n                          sub,\n                          name,\n                          details: '',\n                          image: null,\n                          image_url: null\n                        }]);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 391,\n                      columnNumber: 27\n                    }, this), name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 25\n                  }, this), sel && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mod-extras-vertical\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      placeholder: \"Details\",\n                      value: sel.details,\n                      onChange: e => {\n                        const d = e.target.value;\n                        setMods(ms => ms.map(x => x === sel ? {\n                          ...x,\n                          details: d\n                        } : x));\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 408,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"file\",\n                      accept: \"image/*\",\n                      onChange: e => {\n                        const f = e.target.files[0];\n                        setMods(ms => ms.map(x => x === sel ? {\n                          ...x,\n                          image: f\n                        } : x));\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 419,\n                      columnNumber: 29\n                    }, this), (sel.image_url || sel.image) && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mod-thumb-wrapper\",\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        src: sel.image ? URL.createObjectURL(sel.image) : resolveImageUrl(sel.image_url),\n                        className: \"mod-thumb\",\n                        alt: sel.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 432,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"button\",\n                        className: \"remove-thumb\",\n                        onClick: () => {\n                          setMods(ms => ms.map(x => x === sel ? {\n                            ...x,\n                            image: null,\n                            image_url: null\n                          } : x));\n                        },\n                        children: \"\\xD7\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 440,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 431,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 27\n                  }, this)]\n                }, name, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 23\n                }, this);\n              }), mods.filter(m => m.main === main && m.sub === sub && !subsObj[sub].includes(m.name)).map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mod-card-vertical\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: true,\n                    onChange: () => setMods(ms => ms.filter(x => x !== m))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 472,\n                    columnNumber: 27\n                  }, this), m.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mod-extras-vertical\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: \"Details\",\n                    value: m.details,\n                    onChange: e => {\n                      const d = e.target.value;\n                      setMods(ms => ms.map(x => x === m ? {\n                        ...x,\n                        details: d\n                      } : x));\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 482,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    accept: \"image/*\",\n                    onChange: e => {\n                      const f = e.target.files[0];\n                      setMods(ms => ms.map(x => x === m ? {\n                        ...x,\n                        image: f\n                      } : x));\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 493,\n                    columnNumber: 27\n                  }, this), (m.image_url || m.image) && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mod-thumb-wrapper\",\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: m.image ? URL.createObjectURL(m.image) : resolveImageUrl(m.image_url),\n                      className: \"mod-thumb\",\n                      alt: m.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 506,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: \"remove-thumb\",\n                      onClick: () => {\n                        setMods(ms => ms.map(x => x === m ? {\n                          ...x,\n                          image: null,\n                          image_url: null\n                        } : x));\n                      },\n                      children: \"\\xD7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 514,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 505,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 25\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 23\n              }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"add-custom-mod\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Other mod name\",\n                  value: newModInputs[`${main}-${sub}`] || '',\n                  onChange: e => setNewModInputs(nmi => ({\n                    ...nmi,\n                    [`${main}-${sub}`]: e.target.value\n                  }))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  disabled: !((_newModInputs = newModInputs[`${main}-${sub}`]) !== null && _newModInputs !== void 0 && _newModInputs.trim()),\n                  onClick: () => {\n                    const key = `${main}-${sub}`;\n                    const name = newModInputs[key].trim();\n                    setMods(ms => [...ms, {\n                      main,\n                      sub,\n                      name,\n                      details: '',\n                      image: null,\n                      image_url: null\n                    }]);\n                    setNewModInputs(nmi => ({\n                      ...nmi,\n                      [key]: ''\n                    }));\n                  },\n                  children: \"+ Add Mod\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 19\n              }, this)]\n            }, sub, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this);\n          })]\n        }, main, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"save-btn\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(EditBuild, \"VkG6ESNbyQ7Fp3Ao6NhOvhOyvig=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditBuild;\nvar _c;\n$RefreshReg$(_c, \"EditBuild\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","vehicleData","modCategories","resolveImageUrl","API_BASE","jsxDEV","_jsxDEV","Fragment","_Fragment","EditBuild","_s","id","navigate","loading","setLoading","ownership","setOwnership","vehicleType","setVehicleType","brand","setBrand","selectedModel","setSelectedModel","customModel","setCustomModel","bodyStyle","setBodyStyle","description","setDescription","existingCovers","setExistingCovers","coverFiles","setCoverFiles","existingGallery","setExistingGallery","galleryFiles","setGalleryFiles","mods","setMods","newModInputs","setNewModInputs","get","withCredentials","then","data","b","build","br","rest","car_name","split","model","join","vt","Object","keys","find","t","cover_image","cover_image2","filter","Boolean","galleryImages","map","m","main","category","sub","sub_category","name","mod_name","details","mod_note","image","image_url","catch","err","console","error","finally","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","e","preventDefault","form","FormData","append","trim","JSON","stringify","hasImage","deleteImage","forEach","f","res","put","success","alert","message","response","status","statusText","mainHasSelection","some","subHasSelection","className","type","onClick","window","confirm","delete","_err$response","_err$response2","_err$response2$data","msg","onSubmit","value","checked","onChange","htmlFor","target","placeholder","url","i","src","alt","ec","_","j","multiple","accept","disabled","length","picked","Array","from","files","remaining","cf","slice","file","URL","createObjectURL","g","gf","entries","subsObj","open","_newModInputs","sel","ms","x","d","includes","nmi","key","_c","$RefreshReg$"],"sources":["/Users/adelinadautovic/geargrid-client/src/components/Editbuild.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate }      from 'react-router-dom';\nimport axios                           from 'axios';\nimport { vehicleData }                 from '../data/vehicleData';\nimport { modCategories }               from '../data/modCategories';\nimport { resolveImageUrl, API_BASE }   from '../utils/imageUrl';\nimport '../css/EditBuild.css';\n\n// === EditBuild Component ===\nexport default function EditBuild() {\n  // === Router & Navigation ===\n  const { id }    = useParams();\n  const navigate  = useNavigate();\n\n  // === Loading State ===\n  const [loading, setLoading] = useState(true);\n\n  // === Core Fields ===\n  const [ownership, setOwnership]         = useState('current');\n  const [vehicleType, setVehicleType]     = useState('');\n  const [brand, setBrand]                 = useState('');\n  const [selectedModel, setSelectedModel] = useState('');\n  const [customModel, setCustomModel]     = useState('');\n  const [bodyStyle, setBodyStyle]         = useState('');\n  const [description, setDescription]     = useState('');\n\n  // === Image State ===\n  const [existingCovers, setExistingCovers]   = useState([]); // URLs of already uploaded cover images\n  const [coverFiles, setCoverFiles]           = useState([]); // New cover files to upload\n  const [existingGallery, setExistingGallery] = useState([]); // URLs of already uploaded gallery images\n  const [galleryFiles, setGalleryFiles]       = useState([]); // New gallery files to upload\n\n  // === Mod State ===\n  const [mods, setMods]                 = useState([]); // All mods for this build\n  const [newModInputs, setNewModInputs] = useState({}); // For custom mod input fields\n\n  // === Fetch build data on mount ===\n  useEffect(() => {\n    axios.get(`${API_BASE}/api/builds/${id}`, { withCredentials: true })\n      .then(({ data }) => {\n        // Populate form fields with existing build data\n        const b = data.build;\n        setOwnership(b.ownership);\n        const [br, ...rest] = b.car_name.split(' ');\n        setBrand(br);\n        setSelectedModel(b.model);\n        setCustomModel(rest.join(' ') === b.model ? '' : rest.join(' '));\n        const vt = Object.keys(vehicleData).find(t => vehicleData[t][br]);\n        setVehicleType(vt || '');\n        setBodyStyle(b.bodyStyle || '');\n        setDescription(b.description || '');\n        setExistingCovers([b.cover_image, b.cover_image2].filter(Boolean));\n        setExistingGallery(b.galleryImages || []);\n        // Map backend mods to local mod structure\n        setMods((data.mods || []).map(m => ({\n          main:      m.category,\n          sub:       m.sub_category,\n          name:      m.mod_name,\n          details:   m.mod_note || '',\n          image:     null, // No new image file yet\n          image_url: m.image_url || null\n        })));\n      })\n      .catch(err => console.error('Failed to load build:', err))\n      .finally(() => setLoading(false));\n  }, [id]);\n\n  if (loading) return <p>Loadingâ€¦</p>;\n\n  // === Submit Handler ===\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const form = new FormData();\n    // Append all form fields and files to FormData for backend\n    form.append('ownership', ownership);\n    form.append('car_name', `${brand} ${customModel || selectedModel}`.trim());\n    form.append('model', customModel || selectedModel);\n    form.append('bodyStyle', bodyStyle);\n    form.append('description', description);\n    // Serialize mods for backend\n    form.append('mods', JSON.stringify(\n      mods.map(m => ({\n        main:        m.main,\n        sub:         m.sub,\n        name:        m.name,\n        details:     m.details,\n        image_url:   m.image ? null : m.image_url,\n        hasImage:    !!m.image,\n        deleteImage: !m.image && !m.image_url\n      }))\n    ));\n    // Keep track of which covers/gallery images to keep\n    form.append('keepCovers', JSON.stringify(existingCovers));\n    coverFiles.forEach(f => form.append('coverImages', f));\n    form.append('keepGallery', JSON.stringify(existingGallery));\n    galleryFiles.forEach(f => form.append('galleryImages', f));\n    // Attach new mod images\n    mods.forEach(m => m.image && form.append('modImages', m.image));\n\n    try {\n      const res = await axios.put(`${API_BASE}/api/builds/${id}`, form, { withCredentials: true });\n      if (res.data.success) return navigate(-1); // Go back on success\n      alert(res.data.message || 'Save failed');\n    } catch (err) {\n      console.error('Save error:', err);\n      if (err.response) {\n        alert(`Save failed: ${err.response.status} â€“ ${err.response.data.message || err.response.statusText}`);\n      } else {\n        alert(`Save failed: ${err.message}`);\n      }\n    }\n  };\n\n  // === Helpers for Mod UI ===\n  // Returns true if any mod is selected in this main category\n  const mainHasSelection = main => mods.some(m => m.main === main);\n  // Returns true if any mod is selected in this subcategory\n  const subHasSelection  = (main, sub) => mods.some(m => m.main === main && m.sub === sub);\n\n  // === Render ===\n  return (\n    <div className=\"edit-build-page\">\n      {/* --- Header & Actions --- */}\n      <h1>Edit Build</h1>\n      <div className=\"cancel-row\">\n        {/* Cancel button returns to previous page */}\n        <button\n          type=\"button\"\n          className=\"top-cancel\"\n          onClick={() => navigate(-1)}\n        >\n          Cancel\n        </button>\n        {/* Delete build button */}\n        <button\n          type=\"button\"\n          className=\"delete-btn\"\n          onClick={async () => {\n            if (!window.confirm('Are you sure you want to delete this build? This cannot be undone.')) return;\n            try {\n              const res = await axios.delete(`${API_BASE}/api/builds/${id}`, { withCredentials: true });\n              if (res.data.success) navigate('/profile');\n              else alert(`Delete failed: ${res.data.message}`);\n            } catch (err) {\n              console.error('Delete error:', err);\n              const status = err.response?.status;\n              const msg    = err.response?.data?.message || err.message;\n              alert(`Delete failed: [${status}] ${msg}`);\n            }\n          }}\n        >\n          Delete Build\n        </button>\n      </div>\n\n      <form onSubmit={handleSubmit}>\n        {/* --- Ownership --- */}\n        <fieldset className=\"ownership\">\n          <legend>Ownership</legend>\n          <label>\n            <input\n              type=\"radio\"\n              value=\"current\"\n              checked={ownership === 'current'}\n              onChange={() => setOwnership('current')}\n            /> Currently Owned\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              value=\"previous\"\n              checked={ownership === 'previous'}\n              onChange={() => setOwnership('previous')}\n            /> Previously Owned\n          </label>\n        </fieldset>\n\n        {/* --- Vehicle Type --- */}\n        <div className=\"form-row\">\n          <label htmlFor=\"vehicleType\">Vehicle Type</label>\n          <select\n            id=\"vehicleType\"\n            value={vehicleType}\n            onChange={e => {\n              setVehicleType(e.target.value);\n              setBrand('');\n              setSelectedModel('');\n              setCustomModel('');\n            }}\n          >\n            <option value=\"Car\">Car</option>\n            <option value=\"Truck\">Truck</option>\n            <option value=\"Motorcycle\">Motorcycle</option>\n          </select>\n        </div>\n\n        {/* --- Brand & Model --- */}\n        {vehicleType && (\n          <>\n            <div className=\"form-row\">\n              <label htmlFor=\"brand\">Brand</label>\n              <select\n                id=\"brand\"\n                value={brand}\n                onChange={e => {\n                  setBrand(e.target.value);\n                  setSelectedModel('');\n                  setCustomModel('');\n                }}\n              >\n                <option value=\"\">â€” select â€”</option>\n                {/* List brands for selected vehicle type */}\n                {Object.keys(vehicleData[vehicleType]).map(b => (\n                  <option key={b} value={b}>{b}</option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"model-row form-row\">\n              <div>\n                <label htmlFor=\"model\">Model</label>\n                <select\n                  id=\"model\"\n                  value={selectedModel}\n                  onChange={e => {\n                    setSelectedModel(e.target.value);\n                    setCustomModel('');\n                  }}\n                >\n                  <option value=\"\">â€” select â€”</option>\n                  {/* List models for selected brand */}\n                  {(vehicleData[vehicleType][brand] || []).map(m => (\n                    <option key={m} value={m}>{m}</option>\n                  ))}\n                </select>\n              </div>\n              <div>\n                <label htmlFor=\"customModel\">Type manually (optional)</label>\n                <input\n                  id=\"customModel\"\n                  type=\"text\"\n                  placeholder=\"Type manually (optional)\"\n                  value={customModel}\n                  onChange={e => setCustomModel(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <label htmlFor=\"bodyStyle\">Body Style</label>\n              <select\n                id=\"bodyStyle\"\n                value={bodyStyle}\n                onChange={e => setBodyStyle(e.target.value)}\n              >\n                <option value=\"\">â€” select â€”</option>\n                {/* Common body styles */}\n                <option value=\"Coupe\">Coupe</option>\n                <option value=\"Sedan\">Sedan</option>\n                <option value=\"Hatchback\">Hatchback</option>\n                <option value=\"Wagon\">Wagon</option>\n                <option value=\"Convertible\">Convertible</option>\n                <option value=\"Pickup\">Pickup</option>\n                <option value=\"Truck\">Truck</option>\n                <option value=\"Van\">Van</option>\n                <option value=\"Motorcycle\">Motorcycle</option>\n                <option value=\"Other\">Other</option>\n              </select>\n            </div>\n          </>\n        )}\n\n        {/* --- Description --- */}\n        <label>Description</label>\n        <textarea\n          value={description}\n          onChange={e => setDescription(e.target.value)}\n        />\n\n        {/* --- Covers Section --- */}\n        <label>Current Covers</label>\n        <div className=\"preview-list\">\n          {/* Show existing cover images with remove buttons */}\n          {existingCovers.map((url, i) => (\n            <div key={i} className=\"preview-item small\">\n              <img src={resolveImageUrl(url)} alt={`Cover ${i+1}`} />\n              <button\n                type=\"button\"\n                onClick={() => setExistingCovers(ec => ec.filter((_, j) => j !== i))}\n              >Ã—</button>\n            </div>\n          ))}\n        </div>\n        <label>Upload New Covers</label>\n        <input\n          type=\"file\"\n          multiple\n          accept=\"image/*\"\n          disabled={existingCovers.length + coverFiles.length >= 2}\n          onChange={e => {\n            // Only allow up to 2 cover images total\n            const picked = Array.from(e.target.files);\n            const remaining = 2 - existingCovers.length - coverFiles.length;\n            if (picked.length > remaining) {\n              alert(`You can only add ${remaining} more cover ${remaining===1?'image':'images'}.`);\n            }\n            setCoverFiles(cf => [...cf, ...picked.slice(0, remaining)]);\n            e.target.value = null;\n          }}\n        />\n        <div className=\"preview-list\">\n          {/* Show previews for new cover files */}\n          {coverFiles.map((file,i) => (\n            <div key={i} className=\"preview-item small\">\n              <img src={URL.createObjectURL(file)} alt={file.name} />\n              <button\n                type=\"button\"\n                onClick={() => setCoverFiles(cf => cf.filter((_,j) => j!==i))}\n              >Ã—</button>\n            </div>\n          ))}\n        </div>\n\n        {/* --- Gallery Section --- */}\n        <label>Current Gallery</label>\n        <div className=\"preview-list\">\n          {/* Show existing gallery images with remove buttons */}\n          {existingGallery.map((url, i) => (\n            <div key={i} className=\"preview-item small\">\n              <img src={resolveImageUrl(url)} alt={`Gallery ${i+1}`} />\n              <button\n                type=\"button\"\n                onClick={() => setExistingGallery(g => g.filter((_,j) => j!==i))}\n              >Ã—</button>\n            </div>\n          ))}\n        </div>\n        <label>Upload New Gallery</label>\n        <input\n          type=\"file\"\n          multiple\n          accept=\"image/*\"\n          disabled={existingGallery.length + galleryFiles.length >= 10}\n          onChange={e => {\n            // Only allow up to 10 gallery images total\n            const picked = Array.from(e.target.files);\n            const remaining = 10 - existingGallery.length - galleryFiles.length;\n            if (picked.length > remaining) {\n              alert(`You can only add ${remaining} more gallery ${remaining===1?'image':'images'}.`);\n            }\n            setGalleryFiles(gf => [...gf, ...picked.slice(0, remaining)]);\n            e.target.value = null;\n          }}\n        />\n        <div className=\"preview-list\">\n          {/* Show previews for new gallery files */}\n          {galleryFiles.map((file,i) => (\n            <div key={i} className=\"preview-item small\">\n              <img src={URL.createObjectURL(file)} alt={file.name} />\n              <button\n                type=\"button\"\n                onClick={() => setGalleryFiles(gf => gf.filter((_,j) => j!==i))}\n              >Ã—</button>\n            </div>\n          ))}\n        </div>\n\n        {/* --- Modifications Section --- */}\n        <section className=\"modifications\">\n          <h2>Modifications</h2>\n          {/* Render all main categories and their subcategories */}\n          {Object.entries(modCategories).map(([main, subsObj]) => (\n            <details key={main} open={mainHasSelection(main)}>\n              <summary>{main}</summary>\n\n              {Object.keys(subsObj).map(sub => (\n                <details key={sub} open={subHasSelection(main, sub)}>\n                  <summary>{sub}</summary>\n\n                  {/* Built-in mods for this subcategory */}\n                  {subsObj[sub].map(name => {\n                    const sel = mods.find(\n                      m => m.main === main &&\n                           m.sub === sub &&\n                           m.name === name\n                    );\n                    return (\n                      <div key={name} className=\"mod-card-vertical\">\n                        {/* Checkbox to select/deselect mod */}\n                        <label>\n                          <input\n                            type=\"checkbox\"\n                            checked={!!sel}\n                            onChange={() => {\n                              sel\n                                ? setMods(ms => ms.filter(x => x !== sel))\n                                : setMods(ms => [\n                                    ...ms,\n                                    { main, sub, name, details:'', image:null, image_url:null }\n                                  ]);\n                            }}\n                          />\n                          {name}\n                        </label>\n                        {/* If selected, show details input and image upload */}\n                        {sel && (\n                          <div className=\"mod-extras-vertical\">\n                            <input\n                              type=\"text\"\n                              placeholder=\"Details\"\n                              value={sel.details}\n                              onChange={e => {\n                                const d = e.target.value;\n                                setMods(ms =>\n                                  ms.map(x => x === sel ? { ...x, details: d } : x)\n                                );\n                              }}\n                            />\n                            <input\n                              type=\"file\"\n                              accept=\"image/*\"\n                              onChange={e => {\n                                const f = e.target.files[0];\n                                setMods(ms =>\n                                  ms.map(x => x === sel ? { ...x, image: f } : x)\n                                );\n                              }}\n                            />\n                            {/* Show mod image thumbnail if present */}\n                            {(sel.image_url || sel.image) && (\n                              <div className=\"mod-thumb-wrapper\">\n                                <img\n                                  src={ sel.image\n                                         ? URL.createObjectURL(sel.image)\n                                         : resolveImageUrl(sel.image_url)\n                                       }\n                                  className=\"mod-thumb\"\n                                  alt={sel.name}\n                                />\n                                <button\n                                  type=\"button\"\n                                  className=\"remove-thumb\"\n                                  onClick={() => {\n                                    setMods(ms =>\n                                      ms.map(x =>\n                                        x === sel\n                                          ? { ...x, image: null, image_url: null }\n                                          : x\n                                      )\n                                    );\n                                  }}\n                                >Ã—</button>\n                              </div>\n                            )}\n                          </div>\n                        )}\n                      </div>\n                    );\n                  })}\n\n                  {/* Custom mods for this subcategory */}\n                  {mods\n                    .filter(m =>\n                      m.main === main &&\n                      m.sub === sub &&\n                      !subsObj[sub].includes(m.name)\n                    )\n                    .map((m, i) => (\n                      <div key={i} className=\"mod-card-vertical\">\n                        {/* Checkbox to remove custom mod */}\n                        <label>\n                          <input\n                            type=\"checkbox\"\n                            checked\n                            onChange={() =>\n                              setMods(ms => ms.filter(x => x !== m))\n                            }\n                          />\n                          {m.name}\n                        </label>\n                        <div className=\"mod-extras-vertical\">\n                          <input\n                            type=\"text\"\n                            placeholder=\"Details\"\n                            value={m.details}\n                            onChange={e => {\n                              const d = e.target.value;\n                              setMods(ms =>\n                                ms.map(x => x === m ? { ...x, details: d } : x)\n                              );\n                            }}\n                          />\n                          <input\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={e => {\n                              const f = e.target.files[0];\n                              setMods(ms =>\n                                ms.map(x => x === m ? { ...x, image: f } : x)\n                              );\n                            }}\n                          />\n                          {/* Show mod image thumbnail if present */}\n                          {(m.image_url || m.image) && (\n                            <div className=\"mod-thumb-wrapper\">\n                              <img\n                                src={ m.image\n                                       ? URL.createObjectURL(m.image)\n                                       : resolveImageUrl(m.image_url)\n                                     }\n                                className=\"mod-thumb\"\n                                alt={m.name}\n                              />\n                              <button\n                                type=\"button\"\n                                className=\"remove-thumb\"\n                                onClick={() => {\n                                  setMods(ms =>\n                                    ms.map(x =>\n                                      x === m\n                                        ? { ...x, image: null, image_url: null }\n                                        : x\n                                    )\n                                  );\n                                }}\n                              >Ã—</button>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    ))}\n\n                  {/* Add new custom mod input */}\n                  <div className=\"add-custom-mod\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"Other mod name\"\n                      value={newModInputs[`${main}-${sub}`] || ''}\n                      onChange={e =>\n                        setNewModInputs(nmi => ({\n                          ...nmi,\n                          [`${main}-${sub}`]: e.target.value\n                        }))\n                      }\n                    />\n                    <button\n                      type=\"button\"\n                      disabled={!newModInputs[`${main}-${sub}`]?.trim()}\n                      onClick={() => {\n                        const key = `${main}-${sub}`;\n                        const name = newModInputs[key].trim();\n                        setMods(ms => [\n                          ...ms,\n                          { main, sub, name, details:'', image:null, image_url:null }\n                        ]);\n                        setNewModInputs(nmi => ({ ...nmi, [key]: '' }));\n                      }}\n                    >+ Add Mod</button>\n                  </div>\n                </details>\n              ))}\n            </details>\n          ))}\n        </section>\n\n        {/* --- Form Actions --- */}\n        <div className=\"form-actions\">\n          <button type=\"submit\" className=\"save-btn\">\n            Save Changes\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAa,kBAAkB;AAC9D,OAAOC,KAAK,MAAgC,OAAO;AACnD,SAASC,WAAW,QAAwB,qBAAqB;AACjE,SAASC,aAAa,QAAsB,uBAAuB;AACnE,SAASC,eAAe,EAAEC,QAAQ,QAAU,mBAAmB;AAC/D,OAAO,sBAAsB;;AAE7B;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC;EACA,MAAM;IAAEC;EAAG,CAAC,GAAMb,SAAS,CAAC,CAAC;EAC7B,MAAMc,QAAQ,GAAIb,WAAW,CAAC,CAAC;;EAE/B;EACA,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAWpB,QAAQ,CAAC,SAAS,CAAC;EAC7D,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAOtB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAmBxB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACyB,aAAa,EAAEC,gBAAgB,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC2B,WAAW,EAAEC,cAAc,CAAC,GAAO5B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC6B,SAAS,EAAEC,YAAY,CAAC,GAAW9B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC+B,WAAW,EAAEC,cAAc,CAAC,GAAOhC,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA,MAAM,CAACiC,cAAc,EAAEC,iBAAiB,CAAC,GAAKlC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACmC,UAAU,EAAEC,aAAa,CAAC,GAAapC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACqC,eAAe,EAAEC,kBAAkB,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACuC,YAAY,EAAEC,eAAe,CAAC,GAASxC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5D;EACA,MAAM,CAACyC,IAAI,EAAEC,OAAO,CAAC,GAAmB1C,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtD,MAAM,CAAC2C,YAAY,EAAEC,eAAe,CAAC,GAAG5C,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEtD;EACAC,SAAS,CAAC,MAAM;IACdG,KAAK,CAACyC,GAAG,CAAC,GAAGrC,QAAQ,eAAeO,EAAE,EAAE,EAAE;MAAE+B,eAAe,EAAE;IAAK,CAAC,CAAC,CACjEC,IAAI,CAAC,CAAC;MAAEC;IAAK,CAAC,KAAK;MAClB;MACA,MAAMC,CAAC,GAAGD,IAAI,CAACE,KAAK;MACpB9B,YAAY,CAAC6B,CAAC,CAAC9B,SAAS,CAAC;MACzB,MAAM,CAACgC,EAAE,EAAE,GAAGC,IAAI,CAAC,GAAGH,CAAC,CAACI,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC;MAC3C9B,QAAQ,CAAC2B,EAAE,CAAC;MACZzB,gBAAgB,CAACuB,CAAC,CAACM,KAAK,CAAC;MACzB3B,cAAc,CAACwB,IAAI,CAACI,IAAI,CAAC,GAAG,CAAC,KAAKP,CAAC,CAACM,KAAK,GAAG,EAAE,GAAGH,IAAI,CAACI,IAAI,CAAC,GAAG,CAAC,CAAC;MAChE,MAAMC,EAAE,GAAGC,MAAM,CAACC,IAAI,CAACtD,WAAW,CAAC,CAACuD,IAAI,CAACC,CAAC,IAAIxD,WAAW,CAACwD,CAAC,CAAC,CAACV,EAAE,CAAC,CAAC;MACjE7B,cAAc,CAACmC,EAAE,IAAI,EAAE,CAAC;MACxB3B,YAAY,CAACmB,CAAC,CAACpB,SAAS,IAAI,EAAE,CAAC;MAC/BG,cAAc,CAACiB,CAAC,CAAClB,WAAW,IAAI,EAAE,CAAC;MACnCG,iBAAiB,CAAC,CAACe,CAAC,CAACa,WAAW,EAAEb,CAAC,CAACc,YAAY,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC,CAAC;MAClE3B,kBAAkB,CAACW,CAAC,CAACiB,aAAa,IAAI,EAAE,CAAC;MACzC;MACAxB,OAAO,CAAC,CAACM,IAAI,CAACP,IAAI,IAAI,EAAE,EAAE0B,GAAG,CAACC,CAAC,KAAK;QAClCC,IAAI,EAAOD,CAAC,CAACE,QAAQ;QACrBC,GAAG,EAAQH,CAAC,CAACI,YAAY;QACzBC,IAAI,EAAOL,CAAC,CAACM,QAAQ;QACrBC,OAAO,EAAIP,CAAC,CAACQ,QAAQ,IAAI,EAAE;QAC3BC,KAAK,EAAM,IAAI;QAAE;QACjBC,SAAS,EAAEV,CAAC,CAACU,SAAS,IAAI;MAC5B,CAAC,CAAC,CAAC,CAAC;IACN,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC,CAAC,CACzDG,OAAO,CAAC,MAAMjE,UAAU,CAAC,KAAK,CAAC,CAAC;EACrC,CAAC,EAAE,CAACH,EAAE,CAAC,CAAC;EAER,IAAIE,OAAO,EAAE,oBAAOP,OAAA;IAAA0E,QAAA,EAAG;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;;EAEnC;EACA,MAAMC,YAAY,GAAG,MAAMC,CAAC,IAAI;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,IAAI,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC3B;IACAD,IAAI,CAACE,MAAM,CAAC,WAAW,EAAE3E,SAAS,CAAC;IACnCyE,IAAI,CAACE,MAAM,CAAC,UAAU,EAAE,GAAGvE,KAAK,IAAII,WAAW,IAAIF,aAAa,EAAE,CAACsE,IAAI,CAAC,CAAC,CAAC;IAC1EH,IAAI,CAACE,MAAM,CAAC,OAAO,EAAEnE,WAAW,IAAIF,aAAa,CAAC;IAClDmE,IAAI,CAACE,MAAM,CAAC,WAAW,EAAEjE,SAAS,CAAC;IACnC+D,IAAI,CAACE,MAAM,CAAC,aAAa,EAAE/D,WAAW,CAAC;IACvC;IACA6D,IAAI,CAACE,MAAM,CAAC,MAAM,EAAEE,IAAI,CAACC,SAAS,CAChCxD,IAAI,CAAC0B,GAAG,CAACC,CAAC,KAAK;MACbC,IAAI,EAASD,CAAC,CAACC,IAAI;MACnBE,GAAG,EAAUH,CAAC,CAACG,GAAG;MAClBE,IAAI,EAASL,CAAC,CAACK,IAAI;MACnBE,OAAO,EAAMP,CAAC,CAACO,OAAO;MACtBG,SAAS,EAAIV,CAAC,CAACS,KAAK,GAAG,IAAI,GAAGT,CAAC,CAACU,SAAS;MACzCoB,QAAQ,EAAK,CAAC,CAAC9B,CAAC,CAACS,KAAK;MACtBsB,WAAW,EAAE,CAAC/B,CAAC,CAACS,KAAK,IAAI,CAACT,CAAC,CAACU;IAC9B,CAAC,CAAC,CACJ,CAAC,CAAC;IACF;IACAc,IAAI,CAACE,MAAM,CAAC,YAAY,EAAEE,IAAI,CAACC,SAAS,CAAChE,cAAc,CAAC,CAAC;IACzDE,UAAU,CAACiE,OAAO,CAACC,CAAC,IAAIT,IAAI,CAACE,MAAM,CAAC,aAAa,EAAEO,CAAC,CAAC,CAAC;IACtDT,IAAI,CAACE,MAAM,CAAC,aAAa,EAAEE,IAAI,CAACC,SAAS,CAAC5D,eAAe,CAAC,CAAC;IAC3DE,YAAY,CAAC6D,OAAO,CAACC,CAAC,IAAIT,IAAI,CAACE,MAAM,CAAC,eAAe,EAAEO,CAAC,CAAC,CAAC;IAC1D;IACA5D,IAAI,CAAC2D,OAAO,CAAChC,CAAC,IAAIA,CAAC,CAACS,KAAK,IAAIe,IAAI,CAACE,MAAM,CAAC,WAAW,EAAE1B,CAAC,CAACS,KAAK,CAAC,CAAC;IAE/D,IAAI;MACF,MAAMyB,GAAG,GAAG,MAAMlG,KAAK,CAACmG,GAAG,CAAC,GAAG/F,QAAQ,eAAeO,EAAE,EAAE,EAAE6E,IAAI,EAAE;QAAE9C,eAAe,EAAE;MAAK,CAAC,CAAC;MAC5F,IAAIwD,GAAG,CAACtD,IAAI,CAACwD,OAAO,EAAE,OAAOxF,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC3CyF,KAAK,CAACH,GAAG,CAACtD,IAAI,CAAC0D,OAAO,IAAI,aAAa,CAAC;IAC1C,CAAC,CAAC,OAAO1B,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,aAAa,EAAEF,GAAG,CAAC;MACjC,IAAIA,GAAG,CAAC2B,QAAQ,EAAE;QAChBF,KAAK,CAAC,gBAAgBzB,GAAG,CAAC2B,QAAQ,CAACC,MAAM,MAAM5B,GAAG,CAAC2B,QAAQ,CAAC3D,IAAI,CAAC0D,OAAO,IAAI1B,GAAG,CAAC2B,QAAQ,CAACE,UAAU,EAAE,CAAC;MACxG,CAAC,MAAM;QACLJ,KAAK,CAAC,gBAAgBzB,GAAG,CAAC0B,OAAO,EAAE,CAAC;MACtC;IACF;EACF,CAAC;;EAED;EACA;EACA,MAAMI,gBAAgB,GAAGzC,IAAI,IAAI5B,IAAI,CAACsE,IAAI,CAAC3C,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAKA,IAAI,CAAC;EAChE;EACA,MAAM2C,eAAe,GAAIA,CAAC3C,IAAI,EAAEE,GAAG,KAAK9B,IAAI,CAACsE,IAAI,CAAC3C,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAKA,IAAI,IAAID,CAAC,CAACG,GAAG,KAAKA,GAAG,CAAC;;EAExF;EACA,oBACE7D,OAAA;IAAKuG,SAAS,EAAC,iBAAiB;IAAA7B,QAAA,gBAE9B1E,OAAA;MAAA0E,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB9E,OAAA;MAAKuG,SAAS,EAAC,YAAY;MAAA7B,QAAA,gBAEzB1E,OAAA;QACEwG,IAAI,EAAC,QAAQ;QACbD,SAAS,EAAC,YAAY;QACtBE,OAAO,EAAEA,CAAA,KAAMnG,QAAQ,CAAC,CAAC,CAAC,CAAE;QAAAoE,QAAA,EAC7B;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAET9E,OAAA;QACEwG,IAAI,EAAC,QAAQ;QACbD,SAAS,EAAC,YAAY;QACtBE,OAAO,EAAE,MAAAA,CAAA,KAAY;UACnB,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,oEAAoE,CAAC,EAAE;UAC3F,IAAI;YACF,MAAMf,GAAG,GAAG,MAAMlG,KAAK,CAACkH,MAAM,CAAC,GAAG9G,QAAQ,eAAeO,EAAE,EAAE,EAAE;cAAE+B,eAAe,EAAE;YAAK,CAAC,CAAC;YACzF,IAAIwD,GAAG,CAACtD,IAAI,CAACwD,OAAO,EAAExF,QAAQ,CAAC,UAAU,CAAC,CAAC,KACtCyF,KAAK,CAAC,kBAAkBH,GAAG,CAACtD,IAAI,CAAC0D,OAAO,EAAE,CAAC;UAClD,CAAC,CAAC,OAAO1B,GAAG,EAAE;YAAA,IAAAuC,aAAA,EAAAC,cAAA,EAAAC,mBAAA;YACZxC,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEF,GAAG,CAAC;YACnC,MAAM4B,MAAM,IAAAW,aAAA,GAAGvC,GAAG,CAAC2B,QAAQ,cAAAY,aAAA,uBAAZA,aAAA,CAAcX,MAAM;YACnC,MAAMc,GAAG,GAAM,EAAAF,cAAA,GAAAxC,GAAG,CAAC2B,QAAQ,cAAAa,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcxE,IAAI,cAAAyE,mBAAA,uBAAlBA,mBAAA,CAAoBf,OAAO,KAAI1B,GAAG,CAAC0B,OAAO;YACzDD,KAAK,CAAC,mBAAmBG,MAAM,KAAKc,GAAG,EAAE,CAAC;UAC5C;QACF,CAAE;QAAAtC,QAAA,EACH;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEN9E,OAAA;MAAMiH,QAAQ,EAAElC,YAAa;MAAAL,QAAA,gBAE3B1E,OAAA;QAAUuG,SAAS,EAAC,WAAW;QAAA7B,QAAA,gBAC7B1E,OAAA;UAAA0E,QAAA,EAAQ;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1B9E,OAAA;UAAA0E,QAAA,gBACE1E,OAAA;YACEwG,IAAI,EAAC,OAAO;YACZU,KAAK,EAAC,SAAS;YACfC,OAAO,EAAE1G,SAAS,KAAK,SAAU;YACjC2G,QAAQ,EAAEA,CAAA,KAAM1G,YAAY,CAAC,SAAS;UAAE;YAAAiE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC,CAAC,oBACJ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACR9E,OAAA;UAAA0E,QAAA,gBACE1E,OAAA;YACEwG,IAAI,EAAC,OAAO;YACZU,KAAK,EAAC,UAAU;YAChBC,OAAO,EAAE1G,SAAS,KAAK,UAAW;YAClC2G,QAAQ,EAAEA,CAAA,KAAM1G,YAAY,CAAC,UAAU;UAAE;YAAAiE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CAAC,qBACJ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eAGX9E,OAAA;QAAKuG,SAAS,EAAC,UAAU;QAAA7B,QAAA,gBACvB1E,OAAA;UAAOqH,OAAO,EAAC,aAAa;UAAA3C,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACjD9E,OAAA;UACEK,EAAE,EAAC,aAAa;UAChB6G,KAAK,EAAEvG,WAAY;UACnByG,QAAQ,EAAEpC,CAAC,IAAI;YACbpE,cAAc,CAACoE,CAAC,CAACsC,MAAM,CAACJ,KAAK,CAAC;YAC9BpG,QAAQ,CAAC,EAAE,CAAC;YACZE,gBAAgB,CAAC,EAAE,CAAC;YACpBE,cAAc,CAAC,EAAE,CAAC;UACpB,CAAE;UAAAwD,QAAA,gBAEF1E,OAAA;YAAQkH,KAAK,EAAC,KAAK;YAAAxC,QAAA,EAAC;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAChC9E,OAAA;YAAQkH,KAAK,EAAC,OAAO;YAAAxC,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACpC9E,OAAA;YAAQkH,KAAK,EAAC,YAAY;YAAAxC,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAGLnE,WAAW,iBACVX,OAAA,CAAAE,SAAA;QAAAwE,QAAA,gBACE1E,OAAA;UAAKuG,SAAS,EAAC,UAAU;UAAA7B,QAAA,gBACvB1E,OAAA;YAAOqH,OAAO,EAAC,OAAO;YAAA3C,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpC9E,OAAA;YACEK,EAAE,EAAC,OAAO;YACV6G,KAAK,EAAErG,KAAM;YACbuG,QAAQ,EAAEpC,CAAC,IAAI;cACblE,QAAQ,CAACkE,CAAC,CAACsC,MAAM,CAACJ,KAAK,CAAC;cACxBlG,gBAAgB,CAAC,EAAE,CAAC;cACpBE,cAAc,CAAC,EAAE,CAAC;YACpB,CAAE;YAAAwD,QAAA,gBAEF1E,OAAA;cAAQkH,KAAK,EAAC,EAAE;cAAAxC,QAAA,EAAC;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAEnC9B,MAAM,CAACC,IAAI,CAACtD,WAAW,CAACgB,WAAW,CAAC,CAAC,CAAC8C,GAAG,CAAClB,CAAC,iBAC1CvC,OAAA;cAAgBkH,KAAK,EAAE3E,CAAE;cAAAmC,QAAA,EAAEnC;YAAC,GAAfA,CAAC;cAAAoC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAuB,CACtC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAEN9E,OAAA;UAAKuG,SAAS,EAAC,oBAAoB;UAAA7B,QAAA,gBACjC1E,OAAA;YAAA0E,QAAA,gBACE1E,OAAA;cAAOqH,OAAO,EAAC,OAAO;cAAA3C,QAAA,EAAC;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACpC9E,OAAA;cACEK,EAAE,EAAC,OAAO;cACV6G,KAAK,EAAEnG,aAAc;cACrBqG,QAAQ,EAAEpC,CAAC,IAAI;gBACbhE,gBAAgB,CAACgE,CAAC,CAACsC,MAAM,CAACJ,KAAK,CAAC;gBAChChG,cAAc,CAAC,EAAE,CAAC;cACpB,CAAE;cAAAwD,QAAA,gBAEF1E,OAAA;gBAAQkH,KAAK,EAAC,EAAE;gBAAAxC,QAAA,EAAC;cAAU;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EAEnC,CAACnF,WAAW,CAACgB,WAAW,CAAC,CAACE,KAAK,CAAC,IAAI,EAAE,EAAE4C,GAAG,CAACC,CAAC,iBAC5C1D,OAAA;gBAAgBkH,KAAK,EAAExD,CAAE;gBAAAgB,QAAA,EAAEhB;cAAC,GAAfA,CAAC;gBAAAiB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAuB,CACtC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACN9E,OAAA;YAAA0E,QAAA,gBACE1E,OAAA;cAAOqH,OAAO,EAAC,aAAa;cAAA3C,QAAA,EAAC;YAAwB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC7D9E,OAAA;cACEK,EAAE,EAAC,aAAa;cAChBmG,IAAI,EAAC,MAAM;cACXe,WAAW,EAAC,0BAA0B;cACtCL,KAAK,EAAEjG,WAAY;cACnBmG,QAAQ,EAAEpC,CAAC,IAAI9D,cAAc,CAAC8D,CAAC,CAACsC,MAAM,CAACJ,KAAK;YAAE;cAAAvC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEN9E,OAAA;UAAKuG,SAAS,EAAC,UAAU;UAAA7B,QAAA,gBACvB1E,OAAA;YAAOqH,OAAO,EAAC,WAAW;YAAA3C,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC7C9E,OAAA;YACEK,EAAE,EAAC,WAAW;YACd6G,KAAK,EAAE/F,SAAU;YACjBiG,QAAQ,EAAEpC,CAAC,IAAI5D,YAAY,CAAC4D,CAAC,CAACsC,MAAM,CAACJ,KAAK,CAAE;YAAAxC,QAAA,gBAE5C1E,OAAA;cAAQkH,KAAK,EAAC,EAAE;cAAAxC,QAAA,EAAC;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAEpC9E,OAAA;cAAQkH,KAAK,EAAC,OAAO;cAAAxC,QAAA,EAAC;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACpC9E,OAAA;cAAQkH,KAAK,EAAC,OAAO;cAAAxC,QAAA,EAAC;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACpC9E,OAAA;cAAQkH,KAAK,EAAC,WAAW;cAAAxC,QAAA,EAAC;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC5C9E,OAAA;cAAQkH,KAAK,EAAC,OAAO;cAAAxC,QAAA,EAAC;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACpC9E,OAAA;cAAQkH,KAAK,EAAC,aAAa;cAAAxC,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAChD9E,OAAA;cAAQkH,KAAK,EAAC,QAAQ;cAAAxC,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACtC9E,OAAA;cAAQkH,KAAK,EAAC,OAAO;cAAAxC,QAAA,EAAC;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACpC9E,OAAA;cAAQkH,KAAK,EAAC,KAAK;cAAAxC,QAAA,EAAC;YAAG;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAChC9E,OAAA;cAAQkH,KAAK,EAAC,YAAY;cAAAxC,QAAA,EAAC;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC9C9E,OAAA;cAAQkH,KAAK,EAAC,OAAO;cAAAxC,QAAA,EAAC;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA,eACN,CACH,eAGD9E,OAAA;QAAA0E,QAAA,EAAO;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1B9E,OAAA;QACEkH,KAAK,EAAE7F,WAAY;QACnB+F,QAAQ,EAAEpC,CAAC,IAAI1D,cAAc,CAAC0D,CAAC,CAACsC,MAAM,CAACJ,KAAK;MAAE;QAAAvC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eAGF9E,OAAA;QAAA0E,QAAA,EAAO;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7B9E,OAAA;QAAKuG,SAAS,EAAC,cAAc;QAAA7B,QAAA,EAE1BnD,cAAc,CAACkC,GAAG,CAAC,CAAC+D,GAAG,EAAEC,CAAC,kBACzBzH,OAAA;UAAauG,SAAS,EAAC,oBAAoB;UAAA7B,QAAA,gBACzC1E,OAAA;YAAK0H,GAAG,EAAE7H,eAAe,CAAC2H,GAAG,CAAE;YAACG,GAAG,EAAE,SAASF,CAAC,GAAC,CAAC;UAAG;YAAA9C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACvD9E,OAAA;YACEwG,IAAI,EAAC,QAAQ;YACbC,OAAO,EAAEA,CAAA,KAAMjF,iBAAiB,CAACoG,EAAE,IAAIA,EAAE,CAACtE,MAAM,CAAC,CAACuE,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKL,CAAC,CAAC,CAAE;YAAA/C,QAAA,EACtE;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GALH2C,CAAC;UAAA9C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMN,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN9E,OAAA;QAAA0E,QAAA,EAAO;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAChC9E,OAAA;QACEwG,IAAI,EAAC,MAAM;QACXuB,QAAQ;QACRC,MAAM,EAAC,SAAS;QAChBC,QAAQ,EAAE1G,cAAc,CAAC2G,MAAM,GAAGzG,UAAU,CAACyG,MAAM,IAAI,CAAE;QACzDd,QAAQ,EAAEpC,CAAC,IAAI;UACb;UACA,MAAMmD,MAAM,GAAGC,KAAK,CAACC,IAAI,CAACrD,CAAC,CAACsC,MAAM,CAACgB,KAAK,CAAC;UACzC,MAAMC,SAAS,GAAG,CAAC,GAAGhH,cAAc,CAAC2G,MAAM,GAAGzG,UAAU,CAACyG,MAAM;UAC/D,IAAIC,MAAM,CAACD,MAAM,GAAGK,SAAS,EAAE;YAC7BxC,KAAK,CAAC,oBAAoBwC,SAAS,eAAeA,SAAS,KAAG,CAAC,GAAC,OAAO,GAAC,QAAQ,GAAG,CAAC;UACtF;UACA7G,aAAa,CAAC8G,EAAE,IAAI,CAAC,GAAGA,EAAE,EAAE,GAAGL,MAAM,CAACM,KAAK,CAAC,CAAC,EAAEF,SAAS,CAAC,CAAC,CAAC;UAC3DvD,CAAC,CAACsC,MAAM,CAACJ,KAAK,GAAG,IAAI;QACvB;MAAE;QAAAvC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACF9E,OAAA;QAAKuG,SAAS,EAAC,cAAc;QAAA7B,QAAA,EAE1BjD,UAAU,CAACgC,GAAG,CAAC,CAACiF,IAAI,EAACjB,CAAC,kBACrBzH,OAAA;UAAauG,SAAS,EAAC,oBAAoB;UAAA7B,QAAA,gBACzC1E,OAAA;YAAK0H,GAAG,EAAEiB,GAAG,CAACC,eAAe,CAACF,IAAI,CAAE;YAACf,GAAG,EAAEe,IAAI,CAAC3E;UAAK;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACvD9E,OAAA;YACEwG,IAAI,EAAC,QAAQ;YACbC,OAAO,EAAEA,CAAA,KAAM/E,aAAa,CAAC8G,EAAE,IAAIA,EAAE,CAAClF,MAAM,CAAC,CAACuE,CAAC,EAACC,CAAC,KAAKA,CAAC,KAAGL,CAAC,CAAC,CAAE;YAAA/C,QAAA,EAC/D;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GALH2C,CAAC;UAAA9C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMN,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGN9E,OAAA;QAAA0E,QAAA,EAAO;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9B9E,OAAA;QAAKuG,SAAS,EAAC,cAAc;QAAA7B,QAAA,EAE1B/C,eAAe,CAAC8B,GAAG,CAAC,CAAC+D,GAAG,EAAEC,CAAC,kBAC1BzH,OAAA;UAAauG,SAAS,EAAC,oBAAoB;UAAA7B,QAAA,gBACzC1E,OAAA;YAAK0H,GAAG,EAAE7H,eAAe,CAAC2H,GAAG,CAAE;YAACG,GAAG,EAAE,WAAWF,CAAC,GAAC,CAAC;UAAG;YAAA9C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACzD9E,OAAA;YACEwG,IAAI,EAAC,QAAQ;YACbC,OAAO,EAAEA,CAAA,KAAM7E,kBAAkB,CAACiH,CAAC,IAAIA,CAAC,CAACvF,MAAM,CAAC,CAACuE,CAAC,EAACC,CAAC,KAAKA,CAAC,KAAGL,CAAC,CAAC,CAAE;YAAA/C,QAAA,EAClE;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GALH2C,CAAC;UAAA9C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMN,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN9E,OAAA;QAAA0E,QAAA,EAAO;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjC9E,OAAA;QACEwG,IAAI,EAAC,MAAM;QACXuB,QAAQ;QACRC,MAAM,EAAC,SAAS;QAChBC,QAAQ,EAAEtG,eAAe,CAACuG,MAAM,GAAGrG,YAAY,CAACqG,MAAM,IAAI,EAAG;QAC7Dd,QAAQ,EAAEpC,CAAC,IAAI;UACb;UACA,MAAMmD,MAAM,GAAGC,KAAK,CAACC,IAAI,CAACrD,CAAC,CAACsC,MAAM,CAACgB,KAAK,CAAC;UACzC,MAAMC,SAAS,GAAG,EAAE,GAAG5G,eAAe,CAACuG,MAAM,GAAGrG,YAAY,CAACqG,MAAM;UACnE,IAAIC,MAAM,CAACD,MAAM,GAAGK,SAAS,EAAE;YAC7BxC,KAAK,CAAC,oBAAoBwC,SAAS,iBAAiBA,SAAS,KAAG,CAAC,GAAC,OAAO,GAAC,QAAQ,GAAG,CAAC;UACxF;UACAzG,eAAe,CAACgH,EAAE,IAAI,CAAC,GAAGA,EAAE,EAAE,GAAGX,MAAM,CAACM,KAAK,CAAC,CAAC,EAAEF,SAAS,CAAC,CAAC,CAAC;UAC7DvD,CAAC,CAACsC,MAAM,CAACJ,KAAK,GAAG,IAAI;QACvB;MAAE;QAAAvC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACF9E,OAAA;QAAKuG,SAAS,EAAC,cAAc;QAAA7B,QAAA,EAE1B7C,YAAY,CAAC4B,GAAG,CAAC,CAACiF,IAAI,EAACjB,CAAC,kBACvBzH,OAAA;UAAauG,SAAS,EAAC,oBAAoB;UAAA7B,QAAA,gBACzC1E,OAAA;YAAK0H,GAAG,EAAEiB,GAAG,CAACC,eAAe,CAACF,IAAI,CAAE;YAACf,GAAG,EAAEe,IAAI,CAAC3E;UAAK;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACvD9E,OAAA;YACEwG,IAAI,EAAC,QAAQ;YACbC,OAAO,EAAEA,CAAA,KAAM3E,eAAe,CAACgH,EAAE,IAAIA,EAAE,CAACxF,MAAM,CAAC,CAACuE,CAAC,EAACC,CAAC,KAAKA,CAAC,KAAGL,CAAC,CAAC,CAAE;YAAA/C,QAAA,EACjE;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GALH2C,CAAC;UAAA9C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMN,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGN9E,OAAA;QAASuG,SAAS,EAAC,eAAe;QAAA7B,QAAA,gBAChC1E,OAAA;UAAA0E,QAAA,EAAI;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAErB9B,MAAM,CAAC+F,OAAO,CAACnJ,aAAa,CAAC,CAAC6D,GAAG,CAAC,CAAC,CAACE,IAAI,EAAEqF,OAAO,CAAC,kBACjDhJ,OAAA;UAAoBiJ,IAAI,EAAE7C,gBAAgB,CAACzC,IAAI,CAAE;UAAAe,QAAA,gBAC/C1E,OAAA;YAAA0E,QAAA,EAAUf;UAAI;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC,EAExB9B,MAAM,CAACC,IAAI,CAAC+F,OAAO,CAAC,CAACvF,GAAG,CAACI,GAAG;YAAA,IAAAqF,aAAA;YAAA,oBAC3BlJ,OAAA;cAAmBiJ,IAAI,EAAE3C,eAAe,CAAC3C,IAAI,EAAEE,GAAG,CAAE;cAAAa,QAAA,gBAClD1E,OAAA;gBAAA0E,QAAA,EAAUb;cAAG;gBAAAc,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAU,CAAC,EAGvBkE,OAAO,CAACnF,GAAG,CAAC,CAACJ,GAAG,CAACM,IAAI,IAAI;gBACxB,MAAMoF,GAAG,GAAGpH,IAAI,CAACmB,IAAI,CACnBQ,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAKA,IAAI,IACfD,CAAC,CAACG,GAAG,KAAKA,GAAG,IACbH,CAAC,CAACK,IAAI,KAAKA,IAClB,CAAC;gBACD,oBACE/D,OAAA;kBAAgBuG,SAAS,EAAC,mBAAmB;kBAAA7B,QAAA,gBAE3C1E,OAAA;oBAAA0E,QAAA,gBACE1E,OAAA;sBACEwG,IAAI,EAAC,UAAU;sBACfW,OAAO,EAAE,CAAC,CAACgC,GAAI;sBACf/B,QAAQ,EAAEA,CAAA,KAAM;wBACd+B,GAAG,GACCnH,OAAO,CAACoH,EAAE,IAAIA,EAAE,CAAC9F,MAAM,CAAC+F,CAAC,IAAIA,CAAC,KAAKF,GAAG,CAAC,CAAC,GACxCnH,OAAO,CAACoH,EAAE,IAAI,CACZ,GAAGA,EAAE,EACL;0BAAEzF,IAAI;0BAAEE,GAAG;0BAAEE,IAAI;0BAAEE,OAAO,EAAC,EAAE;0BAAEE,KAAK,EAAC,IAAI;0BAAEC,SAAS,EAAC;wBAAK,CAAC,CAC5D,CAAC;sBACR;oBAAE;sBAAAO,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACH,CAAC,EACDf,IAAI;kBAAA;oBAAAY,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACA,CAAC,EAEPqE,GAAG,iBACFnJ,OAAA;oBAAKuG,SAAS,EAAC,qBAAqB;oBAAA7B,QAAA,gBAClC1E,OAAA;sBACEwG,IAAI,EAAC,MAAM;sBACXe,WAAW,EAAC,SAAS;sBACrBL,KAAK,EAAEiC,GAAG,CAAClF,OAAQ;sBACnBmD,QAAQ,EAAEpC,CAAC,IAAI;wBACb,MAAMsE,CAAC,GAAGtE,CAAC,CAACsC,MAAM,CAACJ,KAAK;wBACxBlF,OAAO,CAACoH,EAAE,IACRA,EAAE,CAAC3F,GAAG,CAAC4F,CAAC,IAAIA,CAAC,KAAKF,GAAG,GAAG;0BAAE,GAAGE,CAAC;0BAAEpF,OAAO,EAAEqF;wBAAE,CAAC,GAAGD,CAAC,CAClD,CAAC;sBACH;oBAAE;sBAAA1E,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACH,CAAC,eACF9E,OAAA;sBACEwG,IAAI,EAAC,MAAM;sBACXwB,MAAM,EAAC,SAAS;sBAChBZ,QAAQ,EAAEpC,CAAC,IAAI;wBACb,MAAMW,CAAC,GAAGX,CAAC,CAACsC,MAAM,CAACgB,KAAK,CAAC,CAAC,CAAC;wBAC3BtG,OAAO,CAACoH,EAAE,IACRA,EAAE,CAAC3F,GAAG,CAAC4F,CAAC,IAAIA,CAAC,KAAKF,GAAG,GAAG;0BAAE,GAAGE,CAAC;0BAAElF,KAAK,EAAEwB;wBAAE,CAAC,GAAG0D,CAAC,CAChD,CAAC;sBACH;oBAAE;sBAAA1E,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACH,CAAC,EAED,CAACqE,GAAG,CAAC/E,SAAS,IAAI+E,GAAG,CAAChF,KAAK,kBAC1BnE,OAAA;sBAAKuG,SAAS,EAAC,mBAAmB;sBAAA7B,QAAA,gBAChC1E,OAAA;wBACE0H,GAAG,EAAGyB,GAAG,CAAChF,KAAK,GACNwE,GAAG,CAACC,eAAe,CAACO,GAAG,CAAChF,KAAK,CAAC,GAC9BtE,eAAe,CAACsJ,GAAG,CAAC/E,SAAS,CAChC;wBACNmC,SAAS,EAAC,WAAW;wBACrBoB,GAAG,EAAEwB,GAAG,CAACpF;sBAAK;wBAAAY,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACf,CAAC,eACF9E,OAAA;wBACEwG,IAAI,EAAC,QAAQ;wBACbD,SAAS,EAAC,cAAc;wBACxBE,OAAO,EAAEA,CAAA,KAAM;0BACbzE,OAAO,CAACoH,EAAE,IACRA,EAAE,CAAC3F,GAAG,CAAC4F,CAAC,IACNA,CAAC,KAAKF,GAAG,GACL;4BAAE,GAAGE,CAAC;4BAAElF,KAAK,EAAE,IAAI;4BAAEC,SAAS,EAAE;0BAAK,CAAC,GACtCiF,CACN,CACF,CAAC;wBACH,CAAE;wBAAA3E,QAAA,EACH;sBAAC;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAQ,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACR,CACN;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACE,CACN;gBAAA,GApEOf,IAAI;kBAAAY,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAqET,CAAC;cAEV,CAAC,CAAC,EAGD/C,IAAI,CACFuB,MAAM,CAACI,CAAC,IACPA,CAAC,CAACC,IAAI,KAAKA,IAAI,IACfD,CAAC,CAACG,GAAG,KAAKA,GAAG,IACb,CAACmF,OAAO,CAACnF,GAAG,CAAC,CAAC0F,QAAQ,CAAC7F,CAAC,CAACK,IAAI,CAC/B,CAAC,CACAN,GAAG,CAAC,CAACC,CAAC,EAAE+D,CAAC,kBACRzH,OAAA;gBAAauG,SAAS,EAAC,mBAAmB;gBAAA7B,QAAA,gBAExC1E,OAAA;kBAAA0E,QAAA,gBACE1E,OAAA;oBACEwG,IAAI,EAAC,UAAU;oBACfW,OAAO;oBACPC,QAAQ,EAAEA,CAAA,KACRpF,OAAO,CAACoH,EAAE,IAAIA,EAAE,CAAC9F,MAAM,CAAC+F,CAAC,IAAIA,CAAC,KAAK3F,CAAC,CAAC;kBACtC;oBAAAiB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACF,CAAC,EACDpB,CAAC,CAACK,IAAI;gBAAA;kBAAAY,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF,CAAC,eACR9E,OAAA;kBAAKuG,SAAS,EAAC,qBAAqB;kBAAA7B,QAAA,gBAClC1E,OAAA;oBACEwG,IAAI,EAAC,MAAM;oBACXe,WAAW,EAAC,SAAS;oBACrBL,KAAK,EAAExD,CAAC,CAACO,OAAQ;oBACjBmD,QAAQ,EAAEpC,CAAC,IAAI;sBACb,MAAMsE,CAAC,GAAGtE,CAAC,CAACsC,MAAM,CAACJ,KAAK;sBACxBlF,OAAO,CAACoH,EAAE,IACRA,EAAE,CAAC3F,GAAG,CAAC4F,CAAC,IAAIA,CAAC,KAAK3F,CAAC,GAAG;wBAAE,GAAG2F,CAAC;wBAAEpF,OAAO,EAAEqF;sBAAE,CAAC,GAAGD,CAAC,CAChD,CAAC;oBACH;kBAAE;oBAAA1E,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC,eACF9E,OAAA;oBACEwG,IAAI,EAAC,MAAM;oBACXwB,MAAM,EAAC,SAAS;oBAChBZ,QAAQ,EAAEpC,CAAC,IAAI;sBACb,MAAMW,CAAC,GAAGX,CAAC,CAACsC,MAAM,CAACgB,KAAK,CAAC,CAAC,CAAC;sBAC3BtG,OAAO,CAACoH,EAAE,IACRA,EAAE,CAAC3F,GAAG,CAAC4F,CAAC,IAAIA,CAAC,KAAK3F,CAAC,GAAG;wBAAE,GAAG2F,CAAC;wBAAElF,KAAK,EAAEwB;sBAAE,CAAC,GAAG0D,CAAC,CAC9C,CAAC;oBACH;kBAAE;oBAAA1E,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC,EAED,CAACpB,CAAC,CAACU,SAAS,IAAIV,CAAC,CAACS,KAAK,kBACtBnE,OAAA;oBAAKuG,SAAS,EAAC,mBAAmB;oBAAA7B,QAAA,gBAChC1E,OAAA;sBACE0H,GAAG,EAAGhE,CAAC,CAACS,KAAK,GACJwE,GAAG,CAACC,eAAe,CAAClF,CAAC,CAACS,KAAK,CAAC,GAC5BtE,eAAe,CAAC6D,CAAC,CAACU,SAAS,CAC9B;sBACNmC,SAAS,EAAC,WAAW;sBACrBoB,GAAG,EAAEjE,CAAC,CAACK;oBAAK;sBAAAY,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACb,CAAC,eACF9E,OAAA;sBACEwG,IAAI,EAAC,QAAQ;sBACbD,SAAS,EAAC,cAAc;sBACxBE,OAAO,EAAEA,CAAA,KAAM;wBACbzE,OAAO,CAACoH,EAAE,IACRA,EAAE,CAAC3F,GAAG,CAAC4F,CAAC,IACNA,CAAC,KAAK3F,CAAC,GACH;0BAAE,GAAG2F,CAAC;0BAAElF,KAAK,EAAE,IAAI;0BAAEC,SAAS,EAAE;wBAAK,CAAC,GACtCiF,CACN,CACF,CAAC;sBACH,CAAE;sBAAA3E,QAAA,EACH;oBAAC;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACR,CACN;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CAAC;cAAA,GA5DE2C,CAAC;gBAAA9C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OA6DN,CACN,CAAC,eAGJ9E,OAAA;gBAAKuG,SAAS,EAAC,gBAAgB;gBAAA7B,QAAA,gBAC7B1E,OAAA;kBACEwG,IAAI,EAAC,MAAM;kBACXe,WAAW,EAAC,gBAAgB;kBAC5BL,KAAK,EAAEjF,YAAY,CAAC,GAAG0B,IAAI,IAAIE,GAAG,EAAE,CAAC,IAAI,EAAG;kBAC5CuD,QAAQ,EAAEpC,CAAC,IACT9C,eAAe,CAACsH,GAAG,KAAK;oBACtB,GAAGA,GAAG;oBACN,CAAC,GAAG7F,IAAI,IAAIE,GAAG,EAAE,GAAGmB,CAAC,CAACsC,MAAM,CAACJ;kBAC/B,CAAC,CAAC;gBACH;kBAAAvC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF,CAAC,eACF9E,OAAA;kBACEwG,IAAI,EAAC,QAAQ;kBACbyB,QAAQ,EAAE,GAAAiB,aAAA,GAACjH,YAAY,CAAC,GAAG0B,IAAI,IAAIE,GAAG,EAAE,CAAC,cAAAqF,aAAA,eAA9BA,aAAA,CAAgC7D,IAAI,CAAC,CAAC,CAAC;kBAClDoB,OAAO,EAAEA,CAAA,KAAM;oBACb,MAAMgD,GAAG,GAAG,GAAG9F,IAAI,IAAIE,GAAG,EAAE;oBAC5B,MAAME,IAAI,GAAG9B,YAAY,CAACwH,GAAG,CAAC,CAACpE,IAAI,CAAC,CAAC;oBACrCrD,OAAO,CAACoH,EAAE,IAAI,CACZ,GAAGA,EAAE,EACL;sBAAEzF,IAAI;sBAAEE,GAAG;sBAAEE,IAAI;sBAAEE,OAAO,EAAC,EAAE;sBAAEE,KAAK,EAAC,IAAI;sBAAEC,SAAS,EAAC;oBAAK,CAAC,CAC5D,CAAC;oBACFlC,eAAe,CAACsH,GAAG,KAAK;sBAAE,GAAGA,GAAG;sBAAE,CAACC,GAAG,GAAG;oBAAG,CAAC,CAAC,CAAC;kBACjD,CAAE;kBAAA/E,QAAA,EACH;gBAAS;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB,CAAC;YAAA,GAtLMjB,GAAG;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAuLR,CAAC;UAAA,CACX,CAAC;QAAA,GA5LUnB,IAAI;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA6LT,CACV,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC,eAGV9E,OAAA;QAAKuG,SAAS,EAAC,cAAc;QAAA7B,QAAA,eAC3B1E,OAAA;UAAQwG,IAAI,EAAC,QAAQ;UAACD,SAAS,EAAC,UAAU;UAAA7B,QAAA,EAAC;QAE3C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC1E,EAAA,CArjBuBD,SAAS;EAAA,QAEbX,SAAS,EACTC,WAAW;AAAA;AAAAiK,EAAA,GAHPvJ,SAAS;AAAA,IAAAuJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}